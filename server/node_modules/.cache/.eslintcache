[{"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Coureseupdate.jsx":"4","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Header.jsx":"5","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\InstructionPage.jsx":"6","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Coursecreation.jsx":"7","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Testcreation.jsx":"8","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Leftnav.jsx":"9","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Examcreation.jsx":"10","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\TestUpdate.jsx":"11","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\DocumentUpload.jsx":"12","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\InstructionDisplay.jsx":"13","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\InstructionUpdate.jsx":"14","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\UpdateInstruction.jsx":"15","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\NewExamUpdataion.jsx":"16","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Dashboard.jsx":"17","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\ExamPage.jsx":"18","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\TestPage.jsx":"19","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\CoursePage.jsx":"20","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\GeneralInstructionsPage.jsx":"21","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\QuizPage.jsx":"22","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\Instructions.jsx":"23","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\Introduction_page_DATA.js":"24"},{"size":552,"mtime":1700480619906,"results":"25","hashOfConfig":"26"},{"size":2884,"mtime":1701765602649,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1700480619906,"results":"28","hashOfConfig":"26"},{"size":13508,"mtime":1701424700917,"results":"29","hashOfConfig":"26"},{"size":299,"mtime":1701765602682,"results":"30","hashOfConfig":"26"},{"size":6426,"mtime":1701501162975,"results":"31","hashOfConfig":"26"},{"size":24089,"mtime":1701778878053,"results":"32","hashOfConfig":"26"},{"size":18642,"mtime":1701841057584,"results":"33","hashOfConfig":"26"},{"size":1202,"mtime":1701765602683,"results":"34","hashOfConfig":"26"},{"size":9765,"mtime":1701778172150,"results":"35","hashOfConfig":"26"},{"size":10520,"mtime":1701765708891,"results":"36","hashOfConfig":"26"},{"size":3989,"mtime":1701765959289,"results":"37","hashOfConfig":"26"},{"size":2830,"mtime":1700822013252,"results":"38","hashOfConfig":"26"},{"size":4599,"mtime":1700480619896,"results":"39","hashOfConfig":"26"},{"size":1910,"mtime":1700821789509,"results":"40","hashOfConfig":"26"},{"size":5724,"mtime":1701415519193,"results":"41","hashOfConfig":"26"},{"size":1272,"mtime":1701765602659,"results":"42","hashOfConfig":"26"},{"size":1226,"mtime":1701765602650,"results":"43","hashOfConfig":"26"},{"size":2155,"mtime":1701765602653,"results":"44","hashOfConfig":"26"},{"size":1445,"mtime":1701765602650,"results":"45","hashOfConfig":"26"},{"size":1244,"mtime":1701765602651,"results":"46","hashOfConfig":"26"},{"size":1737,"mtime":1701765602653,"results":"47","hashOfConfig":"26"},{"size":6391,"mtime":1701765602652,"results":"48","hashOfConfig":"26"},{"size":5746,"mtime":1701765602652,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1kdkyei",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\index.js",[],[],["125","126","127","128","129","130"],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\App.js",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\reportWebVitals.js",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Coureseupdate.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Header.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\InstructionPage.jsx",["131"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport InstructionsDisplay from \"./InstructionDisplay\";\r\nimport base64 from 'base64-js';\r\n// import { Link } from \"react-router-dom\";\r\nconst InstructionPage = () => {\r\n    const [instructionHeading, setInstructionHeading] = useState('');\r\n    const [exams, setExams] = useState([]);\r\n    const [selectedExam, setSelectedExam] = useState('');\r\n    const [file, setFile] = useState(null);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [instructions,setInstructions] = useState([]);\r\n    const [instructionPoints, setInstructionPoints] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchExams = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3081/exams');\r\n                setExams(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching exams:', error);\r\n            }\r\n        };\r\n\r\n        fetchExams();\r\n        fetchInstructions();\r\n        fetchInstructionPoints();\r\n    }, []);\r\n\r\n\r\n    \r\n  const fetchInstructionPoints = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3081/instructionpoint');\r\n      setInstructionPoints(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching instruction points:', error);\r\n    }\r\n  };\r\n\r\n\r\n    const fetchInstructions = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:3081/instructions');\r\n          setInstructions(response.data);\r\n        } catch (error) {\r\n          console.error('Error fetching instructions:', error);\r\n        }\r\n      };\r\n    const handleFileUpload = (files) => {\r\n        const selectedFile = files[0];\r\n        setFile(selectedFile);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        try {\r\n            if (file) {\r\n                const formData = new FormData();\r\n                formData.append('file', file);\r\n                formData.append('examId', selectedExam);\r\n                formData.append('instructionHeading', instructionHeading);\r\n\r\n                await axios.post('http://localhost:3081/instructionupload', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                    },\r\n                });\r\n                document.getElementById('fileInput').value = '';\r\n                alert('File uploaded successfully!');\r\n                fetchInstructions();\r\n            } else {\r\n                alert('Please select a file to upload.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error uploading file:', error.response);\r\n            alert('Failed to upload file. Please try again.');\r\n        }\r\n    }; \r\n    \r\n    const openForm = () => {\r\n        setFormOpen(true);\r\n      };\r\n    \r\n      const closeForm = () => {\r\n        setFormOpen(false);\r\n      };\r\n      const handleDelete = async (instructionId) => {\r\n        try {\r\n          // Send a request to delete the instruction\r\n          await axios.delete(`http://localhost:3081/instructions/${instructionId}`);\r\n          alert('Instruction deleted successfully!');\r\n          fetchInstructions(); // Fetch updated instructions after deletion\r\n        } catch (error) {\r\n          console.error('Error deleting instruction:', error);\r\n          alert('Failed to delete instruction. Please try again.');\r\n        }\r\n      };\r\n      \r\n    return (\r\n        <div>\r\n      {formOpen ? (\r\n            <form>\r\n                <button type=\"button\" onClick={closeForm} disabled={!formOpen}>\r\n        Close Form\r\n      </button>\r\n            <label>Select Exam:</label>\r\n            <select name=\"examId\"  value={selectedExam}  onChange={(e) => setSelectedExam(e.target.value)} >\r\n                <option value=\"\">Select Exam:</option>\r\n                {exams.map((exam) => (\r\n                    <option key={exam.examId} value={exam.examId}>\r\n                        {exam.examName}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <label>Instructions Heading:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={instructionHeading}\r\n                onChange={(e) => setInstructionHeading(e.target.value)}\r\n            />\r\n            <br />\r\n            <div>\r\n                <label>Instructions:</label>\r\n                <input type=\"file\"  id=\"fileInput\"  onChange={(e) => handleFileUpload(e.target.files)} />\r\n                <span>{file ? `Selected File: ${file.name}` : 'No file selected'}</span>\r\n                <button type=\"button\" onClick={handleUpload}>\r\n                    Upload\r\n                </button>\r\n            </div>\r\n            </form>\r\n             ) : (\r\n                <button type=\"button\" onClick={openForm}>\r\n                  Open Form\r\n                </button>\r\n            )}\r\n <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Serial No</th>\r\n            <th>Exam Name</th>\r\n            <th>Instruction Heading</th>\r\n            <th>Document Name</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {instructions.map((instruction, index) => (\r\n            <tr key={instruction.instructionId}>\r\n              <td>{index + 1}</td>\r\n              <td>{instruction.examName}</td>\r\n              <td>{instruction.instructionHeading}</td>\r\n              <td>{instruction.documentName}</td>\r\n              <td>\r\n                {/* <Link to={`/InstructionUpdate/${instruction.instructionId}`}>\r\n                <button>\r\n                  Update\r\n                </button>\r\n                </Link> */}\r\n                <button onClick={() => handleDelete(instruction.instructionId)}>\r\n                  Delete\r\n                </button>\r\n              </td>\r\n              <td>{decodeBase64(instructionPoints[index]?.instructionPoint) || 'N/A'}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div><InstructionsDisplay /></div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nfunction decodeBase64(encodedString) {\r\n  try {\r\n    const decodedString = atob(encodedString);\r\n    return new TextDecoder('utf-8').decode(new TextEncoder().encode(decodedString));\r\n  } catch (error) {\r\n    console.error('Error decoding Base64:', error);\r\n    return 'Unable to decode';\r\n  }\r\n}\r\nexport default InstructionPage;\r\n","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Coursecreation.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Testcreation.jsx",["132","133"],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Leftnav.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Examcreation.jsx",["134"],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\TestUpdate.jsx",["135"],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\DocumentUpload.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\InstructionDisplay.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\InstructionUpdate.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\UpdateInstruction.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\NewExamUpdataion.jsx",["136"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nconst NewExamUpdataion = () => {\r\n    const { examId } = useParams();\r\n    const [examName, setExamName] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n   \r\n  const [initialExamDetails, setInitialExamDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Fetch subjects from the API\r\n    fetch('http://localhost:3081/subjects')\r\n      .then(response => response.json())\r\n      .then(data => setSubjects(data))\r\n      .catch(error => console.error('Error fetching subjects:', error));\r\n  }, []);\r\n\r\n  const fetchSelectedSubjects = async () => {\r\n    try {\r\n      // Fetch selected subjects for the specific exam\r\n      const response = await axios.get(`http://localhost:3081/exams/${examId}/subjects`);\r\n      const selectedSubjectsData = response.data;\r\n  \r\n      // Set the selected subjects in the state\r\n      setSelectedSubjects(selectedSubjectsData);\r\n    } catch (error) {\r\n      console.error('Error fetching selected subjects:', error);\r\n    }\r\n  };\r\n\r\n \r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const examResponse = await axios.get(`http://localhost:3081/feachingexams/${examId}`);\r\n        const selectedSubjectsResponse = await axios.get(`http://localhost:3081/exams/${examId}/subjects`);\r\n  \r\n        const examData = examResponse.data[0];\r\n        const selectedSubjectsData = selectedSubjectsResponse.data;\r\n  \r\n        setExamName(examData.examName);\r\n        setStartDate(examData.startDate);\r\n        setEndDate(examData.endDate);\r\n        setSelectedSubjects(selectedSubjectsData);\r\n        setInitialExamDetails({\r\n          examName: examData.examName,\r\n          startDate: examData.startDate,\r\n          endDate: examData.endDate,\r\n          subjects: selectedSubjectsData,\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [examId]);\r\n\r\n  const handleSubjectChange = subjectId => {\r\n    setSelectedSubjects(prevSelectedSubjects => {\r\n      const newSelectedSubjects = new Set(prevSelectedSubjects);\r\n  \r\n      if (newSelectedSubjects.has(subjectId)) {\r\n        // Subject is already selected, so remove it\r\n        newSelectedSubjects.delete(subjectId);\r\n      } else {\r\n        // Subject is not selected, so add it\r\n        newSelectedSubjects.add(subjectId);\r\n      }\r\n      return Array.from(newSelectedSubjects);\r\n    });\r\n  };\r\n\r\n\r\n//   const formatDate = (dateString) => {\r\n//     if (!dateString) {\r\n//       return '';\r\n//     }\r\n//     const date = new Date(dateString);\r\n//     const year = date.getFullYear();\r\n//     const month = String(date.getMonth() + 1).padStart(2, '0');\r\n//     const day = String(date.getDate()).padStart(2, '0');\r\n\r\n//     return `${year}-${month}-${day}`;\r\n//   };\r\n\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const updatedExamData = {\r\n        examName,\r\n        startDate,\r\n        endDate,\r\n        subjects: selectedSubjects,\r\n      };\r\n\r\n      if (\r\n        examName === initialExamDetails.examName &&\r\n        startDate === initialExamDetails.startDate &&\r\n        endDate === initialExamDetails.endDate &&\r\n        subjects.length === initialExamDetails.subjects.length &&\r\n        subjects.every(subject => initialExamDetails.subjects.includes(subject))\r\n      ) {\r\n        console.log('No changes made');\r\n        return;\r\n      }\r\n\r\n      // Send PUT request to update exam data\r\n      axios.put(`http://localhost:3081/update/${examId}`, updatedExamData)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          // Handle success, e.g., show a success message to the user\r\n        })\r\n        .catch(error => console.error('Error updating exam data:', error));\r\n    console.log('Exam Id:', examId);\r\n    console.log('Exam Name:', examName);\r\n    console.log('Start Date:', new Date(startDate).toLocaleDateString());\r\nconsole.log('End Date:', new Date(endDate).toLocaleDateString());\r\n    console.log('Selected Subjects:', selectedSubjects);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n   <div>\r\n  <label htmlFor=\"examName\">Exam Name:</label>\r\n  <input\r\n    type=\"text\"\r\n    id=\"examName\"\r\n    value={examName || ''}\r\n    onChange={e => setExamName(e.target.value)}\r\n    required\r\n  />\r\n</div>\r\n      <div>\r\n        <label htmlFor=\"startDate\">Start Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"startDate\"\r\n          value={startDate}\r\n        //   value={formatDate(startDate)}\r\n          onChange={e => setStartDate(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"endDate\">End Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"endDate\"\r\n          value ={endDate}\r\n        //   value={formatDate(endDate)}\r\n          onChange={e => setEndDate(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n  <label>Subjects:</label>\r\n  {subjects.map(subject => (\r\n    <div key={subject.subjectId}>\r\n      <input\r\n        type=\"checkbox\"\r\n        id={subject.subjectId}\r\n        value={subject.subjectId}\r\n        checked={selectedSubjects.includes(subject.subjectId)}\r\n        onChange={() => handleSubjectChange(subject.subjectId)}\r\n      />\r\n      <label htmlFor={subject.subjectId}>{subject.subjectName}</label>\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewExamUpdataion;\r\n","C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\components\\Dashboard.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\ExamPage.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\TestPage.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\CoursePage.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\GeneralInstructionsPage.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\QuizPage.jsx",[],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\Instructions.jsx",["137"],[],"C:\\Users\\USER\\Desktop\\OTS\\OTS-ADMIN\\OTS-ADMIN\\src\\FrontEnd\\Introduction_page_DATA.js",[],[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"154","line":20,"column":10,"nodeType":"152","messageId":"153","endLine":20,"endColumn":26},{"ruleId":"150","severity":1,"message":"155","line":97,"column":9,"nodeType":"152","messageId":"153","endLine":97,"endColumn":29},{"ruleId":"150","severity":1,"message":"156","line":13,"column":12,"nodeType":"152","messageId":"153","endLine":13,"endColumn":22},{"ruleId":"150","severity":1,"message":"157","line":161,"column":9,"nodeType":"152","messageId":"153","endLine":161,"endColumn":28},{"ruleId":"150","severity":1,"message":"158","line":22,"column":9,"nodeType":"152","messageId":"153","endLine":22,"endColumn":30},{"ruleId":"159","severity":1,"message":"160","line":14,"column":13,"nodeType":"161","messageId":"162","endLine":14,"endColumn":32},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["163"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'base64' is defined but never used.","Identifier","unusedVar","'selectedSubjects' is assigned a value but never used.","'handleSelectSubjects' is assigned a value but never used.","'submitting' is assigned a value but never used.","'handleSectionChange' is assigned a value but never used.","'fetchSelectedSubjects' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Intro_container must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","no-object-constructor"]