{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\OTS\\\\OTS-ADMIN\\\\OTS-ADMIN\\\\src\\\\components\\\\InstructionUpdate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstructionUpdate = () => {\n  _s();\n  const {\n    instructionId\n  } = useParams();\n  const [instructionHeading, setInstructionHeading] = useState('');\n  const [selectedExam, setSelectedExam] = useState('');\n  const [instructionPoint, setInstructionPoint] = useState('');\n  const [file, setFile] = useState(null);\n  const [exams, setExams] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchExams = async () => {\n      try {\n        const response = await axios.get('http://localhost:3081/exams');\n        setExams(response.data);\n      } catch (error) {\n        console.error('Error fetching exams:', error);\n      }\n    };\n    fetchExams();\n  }, []);\n  const fetchInstructionDetails = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://localhost:3081/instructionsfeach/${instructionId}`);\n      const instruction = response.data;\n\n      // Set the state with fetched data\n      setInstructionHeading(instruction.instructionHeading);\n      setSelectedExam(instruction.examId);\n      setInstructionPoint(instruction.instructionPoint);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching instruction details:', error);\n      setError('Failed to fetch instruction details. Please try again.'); // Set the error state\n    }\n  }, [instructionId]);\n  useEffect(() => {\n    // Fetch the instruction details using instructionId\n    fetchInstructionDetails();\n  }, [instructionId, fetchInstructionDetails]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this); // You can replace this with a loading spinner or a more user-friendly message.\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this); // Display the error message to the user\n  }\n\n  // const handleFileUpload = (files) => {\n  //     const selectedFile = files[0];\n  //     setFile(selectedFile);\n  // };\n\n  const handleUpdate = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('examId', selectedExam);\n      formData.append('instructionHeading', instructionHeading);\n      formData.append('instruction', instructionPoint);\n      await axios.put(`http://localhost:3081/InstructionsUpdate/${instructionId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Instruction updated successfully!');\n    } catch (error) {\n      console.error('Error updating instruction:', error.response);\n      alert('Failed to update instruction. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Instruction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Exam:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"examId\",\n        value: selectedExam,\n        onChange: e => setSelectedExam(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Exam:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), exams.map(exam => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: exam.examId,\n          children: exam.examName\n        }, exam.examId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Instructions Heading:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: instructionHeading,\n        onChange: e => setInstructionHeading(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: instructionPoint,\n          onChange: e => setInstructionPoint(e.target.value),\n          rows: 40,\n          cols: 90\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(InstructionUpdate, \"1rKrQWIebMse/t9+qc7QaOzynZs=\", false, function () {\n  return [useParams];\n});\n_c = InstructionUpdate;\nexport default InstructionUpdate;\nvar _c;\n$RefreshReg$(_c, \"InstructionUpdate\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useParams","jsxDEV","_jsxDEV","InstructionUpdate","_s","instructionId","instructionHeading","setInstructionHeading","selectedExam","setSelectedExam","instructionPoint","setInstructionPoint","file","setFile","exams","setExams","error","setError","loading","setLoading","fetchExams","response","get","data","console","fetchInstructionDetails","instruction","examId","children","fileName","_jsxFileName","lineNumber","columnNumber","handleUpdate","formData","FormData","append","put","headers","alert","name","value","onChange","e","target","map","exam","examName","type","rows","cols","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/OTS/OTS-ADMIN/OTS-ADMIN/src/components/InstructionUpdate.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst InstructionUpdate = () => {\r\n    const { instructionId } = useParams();\r\n    const [instructionHeading, setInstructionHeading] = useState('');\r\n    const [selectedExam, setSelectedExam] = useState('');\r\n    const [instructionPoint, setInstructionPoint] = useState('');\r\n    const [file, setFile] = useState(null);\r\n    const [exams, setExams] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        const fetchExams = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3081/exams');\r\n                setExams(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching exams:', error);\r\n            }\r\n        };\r\n\r\n        fetchExams();\r\n    }, []);\r\n    const fetchInstructionDetails = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:3081/instructionsfeach/${instructionId}`);\r\n            const instruction = response.data;\r\n    \r\n            // Set the state with fetched data\r\n            setInstructionHeading(instruction.instructionHeading);\r\n            setSelectedExam(instruction.examId);\r\n            setInstructionPoint(instruction.instructionPoint);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error('Error fetching instruction details:', error);\r\n            setError('Failed to fetch instruction details. Please try again.'); // Set the error state\r\n        }\r\n    }, [instructionId]);\r\n\r\n    useEffect(() => {\r\n        // Fetch the instruction details using instructionId\r\n        fetchInstructionDetails();\r\n    }, [instructionId, fetchInstructionDetails]);\r\n\r\n\r\n    \r\n    if (loading) {\r\n        return <p>Loading...</p>; // You can replace this with a loading spinner or a more user-friendly message.\r\n    }\r\n    if (error) {\r\n        return <p>{error}</p>; // Display the error message to the user\r\n    }\r\n\r\n    // const handleFileUpload = (files) => {\r\n    //     const selectedFile = files[0];\r\n    //     setFile(selectedFile);\r\n    // };\r\n\r\n    const handleUpdate = async () => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('examId', selectedExam);\r\n            formData.append('instructionHeading', instructionHeading);\r\n             formData.append('instruction', instructionPoint);\r\n            await axios.put(`http://localhost:3081/InstructionsUpdate/${instructionId}`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n\r\n            alert('Instruction updated successfully!');\r\n        } catch (error) {\r\n            console.error('Error updating instruction:', error.response);\r\n            alert('Failed to update instruction. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Update Instruction</h2>\r\n            <form>\r\n                <label>Select Exam:</label>\r\n                <select name=\"examId\" value={selectedExam} onChange={(e) => setSelectedExam(e.target.value)} >\r\n                    <option value=\"\">Select Exam:</option>\r\n                    {exams.map((exam) => (\r\n                        <option key={exam.examId} value={exam.examId}>\r\n                            {exam.examName}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <label>Instructions Heading:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={instructionHeading}\r\n                    onChange={(e) => setInstructionHeading(e.target.value)}\r\n                />\r\n\r\n                <div>\r\n                    <label>Instructions:</label>\r\n                    <textarea\r\n                        value={instructionPoint}\r\n                        onChange={(e) => setInstructionPoint(e.target.value)}\r\n                        rows={40} cols={90}\r\n                    />\r\n                </div>\r\n                <div>\r\n    <label>Instructions:</label>\r\n    <input\r\n        type=\"file\"\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n    />\r\n</div>\r\n                <button type=\"button\" onClick={handleUpdate}>\r\n                    Update\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InstructionUpdate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}