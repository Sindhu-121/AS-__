{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\OTS\\\\OTS-ADMIN\\\\OTS-ADMIN\\\\src\\\\FrontEnd\\\\TestPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestPage = () => {\n  _s();\n  const [testData, setTestData] = useState([]);\n  const [typeOfTest, setTypeOfTest] = useState([]);\n  const {\n    courseCreationId\n  } = useParams();\n  useEffect(() => {\n    const fetchTestData = async () => {\n      try {\n        const responseTest = await fetch(`http://localhost:3081/feachingtest/${courseCreationId}`);\n        const testData = await responseTest.json();\n        setTestData(testData);\n        const responseTypeOfTest = await fetch('http://localhost:3081/feachingtypeoftest');\n        const typeOfTestData = await responseTypeOfTest.json();\n        setTypeOfTest(typeOfTestData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTestData();\n  }, [courseCreationId]);\n  const handleTypeOfTestClick = async typeOfTestId => {\n    try {\n      // Fetch tests based on typeOfTestId\n      const response = await fetch(`http://localhost:3081/feachingtestbytype/${typeOfTestId}`);\n      const testData = await response.json();\n      setTestData(testData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: typeOfTest.map(type => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          onClick: () => handleTypeOfTestClick(type.typeOfTestId),\n          children: type.typeOfTestName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, type.typeOfTestId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: testData.map(test => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Test Name: \", test.TestName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Test Start Date: \", test.testStartDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Test End Date: \", test.testEndDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/Instructions/${test.testCreationTableId}`,\n            children: \"start Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, test.testCreationTableId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TestPage, \"YkoC8ReEU9rKZbRjdP7JKdzmFQ0=\", false, function () {\n  return [useParams];\n});\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","jsxDEV","_jsxDEV","TestPage","_s","testData","setTestData","typeOfTest","setTypeOfTest","courseCreationId","fetchTestData","responseTest","fetch","json","responseTypeOfTest","typeOfTestData","error","console","handleTypeOfTestClick","typeOfTestId","response","children","map","type","to","onClick","typeOfTestName","fileName","_jsxFileName","lineNumber","columnNumber","test","Fragment","TestName","testStartDate","testEndDate","testCreationTableId","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/OTS/OTS-ADMIN/OTS-ADMIN/src/FrontEnd/TestPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nconst TestPage = () => {\r\n  const [testData, setTestData] = useState([]);\r\n  const [typeOfTest, setTypeOfTest] = useState([]);\r\n  const { courseCreationId } = useParams();\r\n  useEffect(() => {\r\n    const fetchTestData = async () => {\r\n      try {\r\n        const responseTest = await fetch(`http://localhost:3081/feachingtest/${courseCreationId}`);\r\n        const testData = await responseTest.json();\r\n        setTestData(testData);\r\n\r\n\r\n        const responseTypeOfTest = await fetch('http://localhost:3081/feachingtypeoftest');\r\n        const typeOfTestData = await responseTypeOfTest.json();\r\n        setTypeOfTest(typeOfTestData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchTestData();\r\n  }, [courseCreationId]);\r\n\r\n  const handleTypeOfTestClick = async (typeOfTestId) => {\r\n    try {\r\n      // Fetch tests based on typeOfTestId\r\n      const response = await fetch(`http://localhost:3081/feachingtestbytype/${typeOfTestId}`);\r\n      const testData = await response.json();\r\n      setTestData(testData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <ul>\r\n        {typeOfTest.map((type) => (\r\n          <li key={type.typeOfTestId}>\r\n            {/* Use the Link to trigger the handleTypeOfTestClick */}\r\n            <Link to=\"#\" onClick={() => handleTypeOfTestClick(type.typeOfTestId)}>\r\n             {type.typeOfTestName}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul>\r\n        {testData.map((test) => (\r\n          <React.Fragment key={test.testCreationTableId}>\r\n            <li>\r\n              Test Name: {test.TestName}\r\n            </li>\r\n            <li>\r\n              Test Start Date: {test.testStartDate}\r\n            </li>\r\n            <li>\r\n              Test End Date: {test.testEndDate}\r\n            </li>\r\n            <li><Link to={`/Instructions/${test.testCreationTableId}`}>start Test</Link></li>\r\n\r\n          </React.Fragment>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}