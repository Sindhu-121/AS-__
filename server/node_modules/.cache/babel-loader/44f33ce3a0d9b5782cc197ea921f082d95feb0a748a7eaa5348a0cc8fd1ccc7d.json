{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\OTS\\\\OTS-ADMIN\\\\OTS-ADMIN\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [courseCount, setCourseCount] = useState(0);\n  const [testCount, setTestCount] = useState(0);\n  useEffect(() => {\n    fetch('http://localhost:3081/courses/count').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Assuming data is an array and the count is in the first object\n      const firstObject = data[0];\n      const totalCount = firstObject ? firstObject.count : 0;\n      console.log('Data received:', totalCount);\n      setCourseCount(totalCount);\n    }).catch(error => console.error('Error fetching course count:', error.message));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3081/test/count').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Assuming data is an array and the count is in the first object\n      const firstObject = data[0];\n      const totalCount = firstObject ? firstObject.count : 0;\n      console.log('Data received:', totalCount);\n      setTestCount(totalCount);\n    }).catch(error => console.error('Error fetching course count:', error.message));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Courses: \", courseCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Tests:\", testCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Questions:\", testCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(Dashboard, \"BWtlXF2xkVyH3UnhtjZ8wSnofM8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","courseCount","setCourseCount","testCount","setTestCount","fetch","then","response","ok","Error","json","data","firstObject","totalCount","count","console","log","catch","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/OTS/OTS-ADMIN/OTS-ADMIN/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nconst Dashboard = () => {\r\n    const [courseCount, setCourseCount] = useState(0);\r\n    const [testCount, setTestCount] = useState(0);\r\n    useEffect(() => {\r\n        fetch('http://localhost:3081/courses/count')\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            // Assuming data is an array and the count is in the first object\r\n            const firstObject = data[0];\r\n            const totalCount = firstObject ? firstObject.count : 0;\r\n      \r\n            console.log('Data received:', totalCount);\r\n            setCourseCount(totalCount);\r\n          })\r\n          .catch((error) => console.error('Error fetching course count:', error.message));\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        fetch('http://localhost:3081/test/count')\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            // Assuming data is an array and the count is in the first object\r\n            const firstObject = data[0];\r\n            const totalCount = firstObject ? firstObject.count : 0;\r\n      \r\n            console.log('Data received:', totalCount);\r\n            setTestCount(totalCount);\r\n          })\r\n          .catch((error) => console.error('Error fetching course count:', error.message));\r\n      }, []);\r\n    return (\r\n      <div>\r\n          <h2>Total Courses: {courseCount}</h2>\r\n        <h2>Total Tests:{testCount}</h2>\r\n        <h2>Total Questions:{testCount}</h2>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC7CC,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,qCAAqC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd;MACA,MAAMC,WAAW,GAAGD,IAAI,CAAC,CAAC,CAAC;MAC3B,MAAME,UAAU,GAAGD,WAAW,GAAGA,WAAW,CAACE,KAAK,GAAG,CAAC;MAEtDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,UAAU,CAAC;MACzCX,cAAc,CAACW,UAAU,CAAC;IAC5B,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACC,OAAO,CAAC,CAAC;EACnF,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd;MACA,MAAMC,WAAW,GAAGD,IAAI,CAAC,CAAC,CAAC;MAC3B,MAAME,UAAU,GAAGD,WAAW,GAAGA,WAAW,CAACE,KAAK,GAAG,CAAC;MAEtDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,UAAU,CAAC;MACzCT,YAAY,CAACS,UAAU,CAAC;IAC1B,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACC,OAAO,CAAC,CAAC;EACnF,CAAC,EAAE,EAAE,CAAC;EACR,oBACErB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,GAAI,iBAAe,EAACnB,WAAW;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvC1B,OAAA;MAAAsB,QAAA,GAAI,cAAY,EAACjB,SAAS;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChC1B,OAAA;MAAAsB,QAAA,GAAI,kBAAgB,EAACjB,SAAS;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/CED,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAiDb,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}