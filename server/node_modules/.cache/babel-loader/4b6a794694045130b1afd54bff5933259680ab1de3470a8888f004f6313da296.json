{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\OTS\\\\OTS-ADMIN\\\\OTS-ADMIN\\\\src\\\\components\\\\TestUpdate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testcreation = ({\n  testCreationTableId\n}) => {\n  _s();\n  const [testName, setTestName] = useState('');\n  const [courses, setCourses] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [duration, setDuration] = useState('');\n  const [totalQuestions, setTotalQuestions] = useState('');\n  const [totalMarks, setTotalMarks] = useState('');\n  const [calculator, setCalculator] = useState('no');\n  const [status, setStatus] = useState('inactive');\n  const [typeOfTests, setTypeOfTests] = useState([]);\n  const [selectedtypeOfTest, setSelectedtypeOfTest] = useState('');\n  const [numberOfSections, setNumberOfSections] = useState(1);\n  const [questionLimitChecked, setQuestionLimitChecked] = useState(false);\n  const [sectionsData, setSectionsData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3081/testcourses').then(response => response.json()).then(data => setCourses(data)).catch(error => console.error('Error fetching courses:', error));\n  }, []);\n  useEffect(() => {\n    if (selectedCourse) {\n      fetch(`http://localhost:3081/course-typeoftests/${selectedCourse}`).then(response => response.json()).then(data => setTypeOfTests(data)).catch(error => console.error('Error fetching course_typeoftests:', error));\n    }\n  }, [selectedCourse]);\n  useEffect(() => {\n    // Fetch data when the component mounts\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3081/fetch-test-data/${testCreationTableId}`);\n        const data = await response.json();\n        if (data && Array.isArray(data.sectionsData)) {\n          setSectionsData(data.sectionsData);\n\n          // Check if testData is available\n          if (data.testData) {\n            const {\n              TestName,\n              SelectedCourse,\n              selectedtypeOfTest,\n              startDate,\n              startTime,\n              endDate,\n              endTime,\n              duration,\n              totalQuestions,\n              totalMarks,\n              calculator,\n              status\n            } = data.testData;\n            setTestName(TestName);\n            setSelectedCourse(SelectedCourse);\n            setSelectedtypeOfTest(selectedtypeOfTest);\n            setStartDate(startDate);\n            setStartTime(startTime);\n            setEndDate(endDate);\n            setEndTime(endTime);\n            setDuration(duration);\n            setTotalQuestions(totalQuestions);\n            setTotalMarks(totalMarks);\n            setCalculator(calculator);\n            setStatus(status);\n          } else {\n            console.error('No test data available.');\n          }\n        } else {\n          console.error('Invalid data format received from the server:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [testCreationTableId]); // Add other dependencies as needed\n\n  const handleSectionChange = (e, index, field) => {\n    // Function to handle changes in section data\n    const updatedSectionsData = [...sectionsData];\n    updatedSectionsData[index] = {\n      ...updatedSectionsData[index],\n      [field]: e.target.value\n    };\n    setSectionsData(updatedSectionsData);\n  };\n  const handleSelectChange = e => {\n    setSelectedCourse(e.target.value);\n  };\n  const handleSelectTypeOfTest = e => {\n    setSelectedtypeOfTest(e.target.value);\n  };\n  const handleInputChange = e => {\n    setTestName(e.target.value);\n  };\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n  const handleStartTimeChange = e => {\n    setStartTime(e.target.value);\n  };\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n  const handleEndTimeChange = e => {\n    setEndTime(e.target.value);\n  };\n  const handleDurationChange = e => {\n    setDuration(e.target.value);\n  };\n  const handleTotalQuestionsChange = e => {\n    setTotalQuestions(e.target.value);\n  };\n  const handleTotalMarksChange = e => {\n    setTotalMarks(e.target.value);\n  };\n  const handleCalculatorChange = e => {\n    setCalculator(e.target.value);\n  };\n  const handleStatusChange = e => {\n    setStatus(e.target.value);\n  };\n  const handleQuestionLimitChange = e => {\n    setQuestionLimitChecked(e.target.checked);\n  };\n  const addSection = () => {\n    setNumberOfSections(prevSections => prevSections + 1);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log('Submitting form with selectedCourse:', selectedCourse);\n      console.log('Submitting form with selectedtypeOfTest:', selectedtypeOfTest);\n      const response = await fetch('http://localhost:3081/create-test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          testName,\n          selectedCourse,\n          selectedtypeOfTest,\n          startDate,\n          startTime,\n          endDate,\n          endTime,\n          duration,\n          totalQuestions,\n          totalMarks,\n          calculator,\n          status,\n          sectionsData\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Test Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: testName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Course:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCourse,\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: course.courseCreationId,\n            children: course.courseName\n          }, course.courseCreationId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Type of Tests:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedtypeOfTest,\n            onChange: handleSelectTypeOfTest,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a type of test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), typeOfTests.map(typeOfTest => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: typeOfTest.TypeOfTestId,\n              children: typeOfTest.TypeOfTestName\n            }, typeOfTest.TypeOfTestId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Test  Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: handleStartDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Test End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: handleEndDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Duration (in minutes):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: duration,\n          onChange: handleDurationChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Total Questions:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: totalQuestions,\n          onChange: handleTotalQuestionsChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Total Marks:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: totalMarks,\n          onChange: handleTotalMarksChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"SECTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: questionLimitChecked,\n            onChange: handleQuestionLimitChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), \"Question Limit:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), questionLimitChecked && /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Question Limit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"No of Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Array.from({\n              length: numberOfSections\n            }, (_, index) => {\n              var _sectionsData$index, _sectionsData$index2, _sectionsData$index3;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: ((_sectionsData$index = sectionsData[index]) === null || _sectionsData$index === void 0 ? void 0 : _sectionsData$index.sectionName) || '',\n                    onChange: e => handleSectionChange(e, index, 'sectionName')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), questionLimitChecked && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: ((_sectionsData$index2 = sectionsData[index]) === null || _sectionsData$index2 === void 0 ? void 0 : _sectionsData$index2.QuestionLimit) || '',\n                    onChange: e => handleSectionChange(e, index, 'QuestionLimit')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: ((_sectionsData$index3 = sectionsData[index]) === null || _sectionsData$index3 === void 0 ? void 0 : _sectionsData$index3.noOfQuestions) || '',\n                    onChange: e => handleSectionChange(e, index, 'noOfQuestions')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addSection,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Calculator:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: calculator,\n          onChange: handleCalculatorChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: status,\n          onChange: handleStatusChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"active\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"inactive\",\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(Testcreation, \"xJR40ILso3N4lmH/VLq7hl9VCBU=\");\n_c = Testcreation;\nexport default Testcreation;\nvar _c;\n$RefreshReg$(_c, \"Testcreation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Testcreation","testCreationTableId","_s","testName","setTestName","courses","setCourses","selectedCourse","setSelectedCourse","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","duration","setDuration","totalQuestions","setTotalQuestions","totalMarks","setTotalMarks","calculator","setCalculator","status","setStatus","typeOfTests","setTypeOfTests","selectedtypeOfTest","setSelectedtypeOfTest","numberOfSections","setNumberOfSections","questionLimitChecked","setQuestionLimitChecked","sectionsData","setSectionsData","fetch","then","response","json","data","catch","error","console","fetchData","Array","isArray","testData","TestName","SelectedCourse","handleSectionChange","e","index","field","updatedSectionsData","target","value","handleSelectChange","handleSelectTypeOfTest","handleInputChange","handleStartDateChange","handleStartTimeChange","handleEndDateChange","handleEndTimeChange","handleDurationChange","handleTotalQuestionsChange","handleTotalMarksChange","handleCalculatorChange","handleStatusChange","handleQuestionLimitChange","checked","addSection","prevSections","handleSubmit","preventDefault","log","method","headers","body","JSON","stringify","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","disabled","map","course","courseCreationId","courseName","typeOfTest","TypeOfTestId","TypeOfTestName","min","from","length","_","_sectionsData$index","_sectionsData$index2","_sectionsData$index3","sectionName","QuestionLimit","noOfQuestions","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/OTS/OTS-ADMIN/OTS-ADMIN/src/components/TestUpdate.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Testcreation = ({ testCreationTableId }) => {\r\n  const [testName, setTestName] = useState('');\r\n  const [courses, setCourses] = useState([]);\r\n  const [selectedCourse, setSelectedCourse] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [endTime, setEndTime] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [totalQuestions, setTotalQuestions] = useState('');\r\n  const [totalMarks, setTotalMarks] = useState('');\r\n  const [calculator, setCalculator] = useState('no');\r\n  const [status, setStatus] = useState('inactive');\r\n  const [typeOfTests, setTypeOfTests] = useState([]);\r\n  const [selectedtypeOfTest, setSelectedtypeOfTest] = useState('');\r\n  const [numberOfSections, setNumberOfSections] = useState(1);\r\n  const [questionLimitChecked, setQuestionLimitChecked] = useState(false);\r\n  const [sectionsData, setSectionsData] = useState([]);\r\n  useEffect(() => {\r\n    fetch('http://localhost:3081/testcourses')\r\n      .then((response) => response.json())\r\n      .then((data) => setCourses(data))\r\n      .catch((error) => console.error('Error fetching courses:', error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCourse) {\r\n      fetch(`http://localhost:3081/course-typeoftests/${selectedCourse}`)\r\n        .then((response) => response.json())\r\n        .then((data) => setTypeOfTests(data))\r\n        .catch((error) => console.error('Error fetching course_typeoftests:', error));\r\n    }\r\n  }, [selectedCourse]);\r\n\r\n  useEffect(() => {\r\n    // Fetch data when the component mounts\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3081/fetch-test-data/${testCreationTableId}`);\r\n        const data = await response.json();\r\n    \r\n        if (data && Array.isArray(data.sectionsData)) {\r\n          setSectionsData(data.sectionsData);\r\n    \r\n          // Check if testData is available\r\n          if (data.testData) {\r\n            const {\r\n              TestName,\r\n              SelectedCourse,\r\n              selectedtypeOfTest,\r\n              startDate,\r\n              startTime,\r\n              endDate,\r\n              endTime,\r\n              duration,\r\n              totalQuestions,\r\n              totalMarks,\r\n              calculator,\r\n              status,\r\n            } = data.testData;\r\n    \r\n            setTestName(TestName);\r\n            setSelectedCourse(SelectedCourse);\r\n            setSelectedtypeOfTest(selectedtypeOfTest);\r\n            setStartDate(startDate);\r\n            setStartTime(startTime);\r\n            setEndDate(endDate);\r\n            setEndTime(endTime);\r\n            setDuration(duration);\r\n            setTotalQuestions(totalQuestions);\r\n            setTotalMarks(totalMarks);\r\n            setCalculator(calculator);\r\n            setStatus(status);\r\n          } else {\r\n            console.error('No test data available.');\r\n          }\r\n        } else {\r\n          console.error('Invalid data format received from the server:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    \r\n    };\r\n\r\n    fetchData();\r\n  }, [testCreationTableId]); // Add other dependencies as needed\r\n  \r\n  const handleSectionChange = (e, index, field) => {\r\n    // Function to handle changes in section data\r\n    const updatedSectionsData = [...sectionsData];\r\n    updatedSectionsData[index] = {\r\n      ...updatedSectionsData[index],\r\n      [field]: e.target.value,\r\n    };\r\n    setSectionsData(updatedSectionsData);\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    setSelectedCourse(e.target.value);\r\n  };\r\n  const handleSelectTypeOfTest = (e) => {\r\n    setSelectedtypeOfTest(e.target.value);\r\n  }\r\n  const handleInputChange = (e) => {\r\n    setTestName(e.target.value);\r\n  };\r\n  const handleStartDateChange = (e) => {\r\n    setStartDate(e.target.value);\r\n  };\r\n\r\n  const handleStartTimeChange = (e) => {\r\n    setStartTime(e.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setEndDate(e.target.value);\r\n  };\r\n\r\n  const handleEndTimeChange = (e) => {\r\n    setEndTime(e.target.value);\r\n  };\r\n\r\n\r\n  const handleDurationChange = (e) => {\r\n    setDuration(e.target.value);\r\n  };\r\n\r\n  const handleTotalQuestionsChange = (e) => {\r\n    setTotalQuestions(e.target.value);\r\n  };\r\n\r\n  const handleTotalMarksChange = (e) => {\r\n    setTotalMarks(e.target.value);\r\n  };\r\n  const handleCalculatorChange = (e) => {\r\n    setCalculator(e.target.value);\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const handleQuestionLimitChange = (e) => {\r\n    setQuestionLimitChecked(e.target.checked);\r\n  };\r\n\r\n  const addSection = () => {\r\n    setNumberOfSections((prevSections) => prevSections + 1);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log('Submitting form with selectedCourse:', selectedCourse);\r\n      console.log('Submitting form with selectedtypeOfTest:', selectedtypeOfTest);\r\n\r\n      const response = await fetch('http://localhost:3081/create-test', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          testName,\r\n          selectedCourse,\r\n          selectedtypeOfTest,\r\n          startDate,\r\n          startTime,\r\n          endDate,\r\n          endTime,\r\n          duration,\r\n          totalQuestions,\r\n          totalMarks,\r\n          calculator,\r\n          status,\r\n          sectionsData,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Test Name:\r\n          <input type=\"text\" value={testName} onChange={handleInputChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Select Course:\r\n          <select value={selectedCourse} onChange={handleSelectChange}>\r\n            <option value=\"\" disabled>Select a course</option>\r\n            {courses.map((course) => (\r\n              <option key={course.courseCreationId} value={course.courseCreationId}>\r\n                {course.courseName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n\r\n        <div>\r\n          <label>\r\n            Type of Tests:\r\n            <select value={selectedtypeOfTest} onChange={handleSelectTypeOfTest}>\r\n              <option value=\"\" disabled>Select a type of test</option>\r\n              {typeOfTests.map((typeOfTest) => (\r\n                <option key={typeOfTest.TypeOfTestId} value={typeOfTest.TypeOfTestId}>\r\n                  {typeOfTest.TypeOfTestName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n        </div>\r\n\r\n\r\n        <label>\r\n          Test  Start Date:\r\n          <input type=\"date\" value={startDate} onChange={handleStartDateChange} />\r\n        </label>\r\n        <label>\r\n          Start Time:\r\n          <input type=\"time\" value={startTime} onChange={handleStartTimeChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Test End Date:\r\n          <input type=\"date\" value={endDate} onChange={handleEndDateChange} />\r\n        </label>\r\n        <label>\r\n          End Time:\r\n          <input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Duration (in minutes):\r\n          <input type=\"number\" value={duration} onChange={handleDurationChange} min=\"1\" />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Total Questions:\r\n          <input type=\"number\" value={totalQuestions} onChange={handleTotalQuestionsChange} min=\"1\" />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Total Marks:\r\n          <input type=\"number\" value={totalMarks} onChange={handleTotalMarksChange} min=\"1\" />\r\n        </label>\r\n        <br />\r\n        <div>\r\n          <label>SECTION</label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={questionLimitChecked}\r\n              onChange={handleQuestionLimitChange}\r\n            />Question Limit:\r\n          </label>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Section</th>\r\n                {questionLimitChecked && <th>Question Limit</th>}\r\n                <th>No of Question</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Array.from({ length: numberOfSections }, (_, index) => (\r\n                <tr key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={sectionsData[index]?.sectionName || ''}\r\n                      onChange={(e) => handleSectionChange(e, index, 'sectionName')}\r\n                    />\r\n                  </td>\r\n                  {questionLimitChecked && (\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={sectionsData[index]?.QuestionLimit || ''}\r\n                        onChange={(e) => handleSectionChange(e, index, 'QuestionLimit')}\r\n                      />\r\n                    </td>\r\n                  )}\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={sectionsData[index]?.noOfQuestions || ''}\r\n                      onChange={(e) => handleSectionChange(e, index, 'noOfQuestions')}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" onClick={addSection}>\r\n            +\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <label>\r\n          Calculator:\r\n          <select value={calculator} onChange={handleCalculatorChange}>\r\n            <option value=\"yes\">Yes</option>\r\n            <option value=\"no\">No</option>\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Status:\r\n          <select value={status} onChange={handleStatusChange}>\r\n            <option value=\"active\">Active</option>\r\n            <option value=\"inactive\">Inactive</option>\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Testcreation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}