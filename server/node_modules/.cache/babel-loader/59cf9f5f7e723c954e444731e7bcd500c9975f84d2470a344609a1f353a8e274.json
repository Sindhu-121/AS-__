{"ast":null,"code":"// import axios from 'axios';\n// import React ,{useEffect, useState}from 'react'\n// import { useNavigate, useParams } from 'react-router-dom'\n\n// const Examupdate = () => {\n// const {examId} =useParams();\n// const [examName,setExamName]=useState('');\n// const [startDate,setStartDate]=useState('');\n// const [endDate,setEndDate]=useState('');    \n\n// const [subjects, setSubjects] = useState([]);\n// const [selectedSubjects, setSelectedSubjects] = useState([]);\n\n// const handleCheckboxChange = (subjectId) => {\n//     const updatedSelectedSubjects = selectedSubjects.includes(subjectId)\n//       ? selectedSubjects.filter(id => id !== subjectId)\n//       : [...selectedSubjects, subjectId];\n\n//     setSelectedSubjects(updatedSelectedSubjects);\n\n//     // Make API request to update selected subjects for the exam\n//     axios.put(`http://localhost:3081/exams/${examId}/subjects`, { subjects: updatedSelectedSubjects })\n//       .then(res => {\n//         console.log(res.data.message);\n//       })\n//       .catch(err => console.log(err));\n//   };\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3081/update/${examId}`)\n//       .then(res => {\n//         setExamName(res.data[0].examName);\n//         setStartDate(res.data[0].startDate);\n//         setEndDate(res.data[0].endDate);\n//       })\n//       .catch(err => console.log(err));\n\n//     // Fetch subjects\n//     axios.get('http://localhost:3081/subjects')\n//       .then(res => {\n//         setSubjects(res.data);\n\n//         // Fetch selected subjects for the specific examId\n//         axios.get(`http://localhost:3081/exams/${examId}/subjects`)\n//           .then(selectedSubjectsRes => {\n//             setSelectedSubjects(selectedSubjectsRes.data);\n//           })\n//           .catch(err => console.log(err));\n//       })\n//       .catch(err => console.log(err));\n//   }, [examId]);\n\n//   const formatDate = (dateString) => {\n//     if (!dateString) {\n//       return '';\n//     }\n//     const date = new Date(dateString);\n//     const year = date.getFullYear();\n//     const month = String(date.getMonth() + 1).padStart(2, '0');\n//     const day = String(date.getDate()).padStart(2, '0');\n\n//     return `${year}-${month}-${day}`;\n//   };\n\n// const navigate =useNavigate();\n//  const hanldesubmit = (e)=>{\n//     e.preventDefault();\n//     axios.put(`http://localhost:3081/updatedata/${examId}`, { examName, startDate, endDate ,selectedSubjects})\n//     .then(res => {\n//       if (res.data.updated) {\n//         navigate('/exams');\n//       } else {\n//         alert('Data is not updated');\n//       }\n//     }) }\n\n//   return (\n//     <>  \n//      <div className='update_Exam_from'>\n//      <h2>Update Exam</h2>\n//     <form onSubmit={hanldesubmit}>\n//     <div className='formdiv_contaniner'>\n//             <label>\n//               Exam Name:\n//             </label>\n//             <input type=\"text\" value={examName} onChange={(e) => setExamName(e.target.value)} />\n\n//             </div>\n//             <div className='formdiv_contaniner'>\n//             <label>\n//               Start Date:\n\n//             </label>\n\n//             <input type=\"date\" value={formatDate(startDate)} onChange={(e) => setStartDate(e.target.value)} min={new Date().toISOString().split('T')[0]}/>\n//              </div>\n//              <div className='formdiv_contaniner'>\n//            <label>\n//               End Date:\n//             </label>\n//             <input type=\"date\" value={formatDate(endDate)} onChange={(e) => setEndDate(e.target.value)} min={new Date().toISOString().split('T')[0]}/>\n//            </div>\n\n//            <form className='formdiv_contaniner'>\n//     <label>Subjects:</label>\n// <ul className=\"subject-list\">\n//   {subjects.map(subject => (\n//     <li key={subject.subjectId}>\n//       <label>\n//         <input\n//           type=\"checkbox\"\n//           checked={selectedSubjects.includes(subject.subjectId)}\n//           onChange={() => handleCheckboxChange(subject.subjectId)}\n//         />\n//         {subject.subjectName}\n//       </label>\n//     </li>\n//   ))}\n// </ul>\n// </form>\n//     <button type=\"submit\">Update</button>\n//   </form></div>\n//     </>\n\n//   )\n// }\n\n// export default Examupdate","map":{"version":3,"names":[],"sources":["C:/Users/USER/Desktop/OTS/OTS-ADMIN/OTS-ADMIN/src/components/Examupdate.jsx"],"sourcesContent":["// import axios from 'axios';\r\n// import React ,{useEffect, useState}from 'react'\r\n// import { useNavigate, useParams } from 'react-router-dom'\r\n\r\n// const Examupdate = () => {\r\n// const {examId} =useParams();\r\n// const [examName,setExamName]=useState('');\r\n// const [startDate,setStartDate]=useState('');\r\n// const [endDate,setEndDate]=useState('');    \r\n\r\n// const [subjects, setSubjects] = useState([]);\r\n// const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n\r\n// const handleCheckboxChange = (subjectId) => {\r\n//     const updatedSelectedSubjects = selectedSubjects.includes(subjectId)\r\n//       ? selectedSubjects.filter(id => id !== subjectId)\r\n//       : [...selectedSubjects, subjectId];\r\n  \r\n//     setSelectedSubjects(updatedSelectedSubjects);\r\n  \r\n//     // Make API request to update selected subjects for the exam\r\n//     axios.put(`http://localhost:3081/exams/${examId}/subjects`, { subjects: updatedSelectedSubjects })\r\n//       .then(res => {\r\n//         console.log(res.data.message);\r\n//       })\r\n//       .catch(err => console.log(err));\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     axios.get(`http://localhost:3081/update/${examId}`)\r\n//       .then(res => {\r\n//         setExamName(res.data[0].examName);\r\n//         setStartDate(res.data[0].startDate);\r\n//         setEndDate(res.data[0].endDate);\r\n//       })\r\n//       .catch(err => console.log(err));\r\n  \r\n//     // Fetch subjects\r\n//     axios.get('http://localhost:3081/subjects')\r\n//       .then(res => {\r\n//         setSubjects(res.data);\r\n  \r\n//         // Fetch selected subjects for the specific examId\r\n//         axios.get(`http://localhost:3081/exams/${examId}/subjects`)\r\n//           .then(selectedSubjectsRes => {\r\n//             setSelectedSubjects(selectedSubjectsRes.data);\r\n//           })\r\n//           .catch(err => console.log(err));\r\n//       })\r\n//       .catch(err => console.log(err));\r\n//   }, [examId]);\r\n\r\n//   const formatDate = (dateString) => {\r\n//     if (!dateString) {\r\n//       return '';\r\n//     }\r\n//     const date = new Date(dateString);\r\n//     const year = date.getFullYear();\r\n//     const month = String(date.getMonth() + 1).padStart(2, '0');\r\n//     const day = String(date.getDate()).padStart(2, '0');\r\n\r\n//     return `${year}-${month}-${day}`;\r\n//   };\r\n\r\n\r\n// const navigate =useNavigate();\r\n//  const hanldesubmit = (e)=>{\r\n//     e.preventDefault();\r\n//     axios.put(`http://localhost:3081/updatedata/${examId}`, { examName, startDate, endDate ,selectedSubjects})\r\n//     .then(res => {\r\n//       if (res.data.updated) {\r\n//         navigate('/exams');\r\n//       } else {\r\n//         alert('Data is not updated');\r\n//       }\r\n//     }) }\r\n\r\n//   return (\r\n//     <>  \r\n//      <div className='update_Exam_from'>\r\n//      <h2>Update Exam</h2>\r\n//     <form onSubmit={hanldesubmit}>\r\n//     <div className='formdiv_contaniner'>\r\n//             <label>\r\n//               Exam Name:\r\n//             </label>\r\n//             <input type=\"text\" value={examName} onChange={(e) => setExamName(e.target.value)} />\r\n\r\n//             </div>\r\n//             <div className='formdiv_contaniner'>\r\n//             <label>\r\n//               Start Date:\r\n              \r\n//             </label>\r\n\r\n//             <input type=\"date\" value={formatDate(startDate)} onChange={(e) => setStartDate(e.target.value)} min={new Date().toISOString().split('T')[0]}/>\r\n//              </div>\r\n//              <div className='formdiv_contaniner'>\r\n//            <label>\r\n//               End Date:\r\n//             </label>\r\n//             <input type=\"date\" value={formatDate(endDate)} onChange={(e) => setEndDate(e.target.value)} min={new Date().toISOString().split('T')[0]}/>\r\n//            </div>\r\n\r\n//            <form className='formdiv_contaniner'>\r\n//     <label>Subjects:</label>\r\n// <ul className=\"subject-list\">\r\n//   {subjects.map(subject => (\r\n//     <li key={subject.subjectId}>\r\n//       <label>\r\n//         <input\r\n//           type=\"checkbox\"\r\n//           checked={selectedSubjects.includes(subject.subjectId)}\r\n//           onChange={() => handleCheckboxChange(subject.subjectId)}\r\n//         />\r\n//         {subject.subjectName}\r\n//       </label>\r\n//     </li>\r\n//   ))}\r\n// </ul>\r\n// </form>\r\n//     <button type=\"submit\">Update</button>\r\n//   </form></div>\r\n//     </>\r\n\r\n//   )\r\n// }\r\n\r\n// export default Examupdate"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}