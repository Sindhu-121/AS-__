{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\OTS\\\\OTS-ADMIN\\\\OTS-ADMIN\\\\src\\\\components\\\\Testcreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testcreation = () => {\n  _s();\n  const [testName, setTestName] = useState('');\n  const [courses, setCourses] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [duration, setDuration] = useState('');\n  const [totalQuestions, setTotalQuestions] = useState('');\n  const [totalMarks, setTotalMarks] = useState('');\n  const [calculator, setCalculator] = useState('no');\n  const [status, setStatus] = useState('inactive');\n  const [typeOfTests, setTypeOfTests] = useState([]);\n  const [selectedtypeOfTest, setSelectedtypeOfTest] = useState('');\n  const [numberOfSections, setNumberOfSections] = useState(1);\n  const [QuestionLimitChecked, setQuestionLimitChecked] = useState(false);\n  const [sectionsData, setSectionsData] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [testData, setTestData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3081/testcourses').then(response => response.json()).then(data => setCourses(data)).catch(error => console.error('Error fetching courses:', error));\n  }, []);\n  useEffect(() => {\n    if (selectedCourse) {\n      fetch(`http://localhost:3081/course-typeoftests/${selectedCourse}`).then(response => response.json()).then(data => setTypeOfTests(data)).catch(error => console.error('Error fetching course_typeoftests:', error));\n    }\n  }, [selectedCourse]);\n  const handleOpenForm = () => {\n    setIsFormVisible(true);\n  };\n  const handleCloseForm = () => {\n    setIsFormVisible(false);\n  };\n  const handleSelectChange = e => {\n    setSelectedCourse(e.target.value);\n  };\n  const handleSelectTypeOfTest = e => {\n    setSelectedtypeOfTest(e.target.value);\n  };\n  const handleInputChange = e => {\n    setTestName(e.target.value);\n  };\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n  const handleStartTimeChange = e => {\n    setStartTime(e.target.value);\n  };\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n  const handleEndTimeChange = e => {\n    setEndTime(e.target.value);\n  };\n  const handleDurationChange = e => {\n    setDuration(e.target.value);\n  };\n  const handleTotalQuestionsChange = e => {\n    setTotalQuestions(e.target.value);\n  };\n  const handleTotalMarksChange = e => {\n    setTotalMarks(e.target.value);\n  };\n  const handleCalculatorChange = e => {\n    setCalculator(e.target.value);\n  };\n  const handleStatusChange = e => {\n    setStatus(e.target.value);\n  };\n  const handleQuestionLimitChange = e => {\n    setQuestionLimitChecked(e.target.checked);\n  };\n  const handleSectionChange = (e, index, field) => {\n    // Create a copy of the sectionsData array\n    const updatedSectionsData = [...sectionsData];\n\n    // Ensure that the array at the given index is initialized\n    if (!updatedSectionsData[index]) {\n      updatedSectionsData[index] = {};\n    }\n\n    // Update the specified field in the copied array\n    updatedSectionsData[index][field] = e.target.value;\n\n    // Set the updated array to the state\n    setSectionsData(updatedSectionsData);\n  };\n  const addSection = () => {\n    setNumberOfSections(prevSections => prevSections + 1);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Log the sectionsData before making the request\n      console.log('Sections Data Before Request:', sectionsData);\n\n      // Assuming you have the testCreationTableId from the test creation\n      // const testCreationTableId = getTestCreationTableId();\n\n      // Make a request to create test and sections\n      const response = await fetch('http://localhost:3081/create-test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          testName,\n          selectedCourse,\n          selectedtypeOfTest,\n          startDate,\n          startTime,\n          endDate,\n          endTime,\n          duration,\n          totalQuestions,\n          totalMarks,\n          calculator,\n          status,\n          sectionsData // Use the state variable directly\n        })\n      });\n\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n  useEffect(() => {\n    const feachTestData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3081/test_creation_table\");\n        const data = await response.json(); // Convert the response to JSON\n        setTestData(data);\n      } catch (error) {\n        console.error(\"Error fetching course data:\", error);\n      }\n    };\n    feachTestData();\n  }, []);\n  function formatTime(timeString) {\n    const date = new Date(timeString);\n    if (isNaN(date.getTime())) {\n      // Handle the case where the date is invalid\n      return \"Invalid Date\";\n    }\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Month is 0-based\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isFormVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleOpenForm,\n      children: \"Open Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCloseForm,\n        children: \"Close Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Test Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: testName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Course:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCourse,\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: course.courseCreationId,\n            children: course.courseName\n          }, course.courseCreationId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Type of Tests:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedtypeOfTest,\n            onChange: handleSelectTypeOfTest,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a type of test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), typeOfTests.map(typeOfTest => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: typeOfTest.TypeOfTestId,\n              children: typeOfTest.TypeOfTestName\n            }, typeOfTest.TypeOfTestId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Test  Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: handleStartDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Test End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: handleEndDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Duration (in minutes):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: duration,\n          onChange: handleDurationChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Total Questions:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: totalQuestions,\n          onChange: handleTotalQuestionsChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Total Marks:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: totalMarks,\n          onChange: handleTotalMarksChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"SECTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: QuestionLimitChecked,\n            onChange: handleQuestionLimitChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), \"Question Limit:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"No of Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), QuestionLimitChecked && /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Question Limit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Array.from({\n              length: numberOfSections\n            }, (_, index) => {\n              var _sectionsData$index, _sectionsData$index2, _sectionsData$index3;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: ((_sectionsData$index = sectionsData[index]) === null || _sectionsData$index === void 0 ? void 0 : _sectionsData$index.sectionName) || '',\n                    onChange: e => handleSectionChange(e, index, 'sectionName')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: ((_sectionsData$index2 = sectionsData[index]) === null || _sectionsData$index2 === void 0 ? void 0 : _sectionsData$index2.noOfQuestions) || '',\n                    onChange: e => handleSectionChange(e, index, 'noOfQuestions')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this), QuestionLimitChecked && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: ((_sectionsData$index3 = sectionsData[index]) === null || _sectionsData$index3 === void 0 ? void 0 : _sectionsData$index3.QuestionLimit) || '',\n                    onChange: e => handleSectionChange(e, index, 'QuestionLimit')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addSection,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Calculator:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: calculator,\n          onChange: handleCalculatorChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: status,\n          onChange: handleStatusChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"active\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"inactive\",\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Serial no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Test Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Selected Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Test Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Test End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: testData.map((test, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: test.TestName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: test.courseName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(test.testStartDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(test.testEndDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDateAndTime(test.testStartTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDateAndTime(test.testEndTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: test.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)]\n          }, test.testCreationTableId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(Testcreation, \"swReqxx7bckiBiSRRTADqM1MvZ8=\");\n_c = Testcreation;\nexport default Testcreation;\nvar _c;\n$RefreshReg$(_c, \"Testcreation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Testcreation","_s","testName","setTestName","courses","setCourses","selectedCourse","setSelectedCourse","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","duration","setDuration","totalQuestions","setTotalQuestions","totalMarks","setTotalMarks","calculator","setCalculator","status","setStatus","typeOfTests","setTypeOfTests","selectedtypeOfTest","setSelectedtypeOfTest","numberOfSections","setNumberOfSections","QuestionLimitChecked","setQuestionLimitChecked","sectionsData","setSectionsData","isFormVisible","setIsFormVisible","testData","setTestData","fetch","then","response","json","data","catch","error","console","handleOpenForm","handleCloseForm","handleSelectChange","e","target","value","handleSelectTypeOfTest","handleInputChange","handleStartDateChange","handleStartTimeChange","handleEndDateChange","handleEndTimeChange","handleDurationChange","handleTotalQuestionsChange","handleTotalMarksChange","handleCalculatorChange","handleStatusChange","handleQuestionLimitChange","checked","handleSectionChange","index","field","updatedSectionsData","addSection","prevSections","handleSubmit","preventDefault","log","method","headers","body","JSON","stringify","feachTestData","formatTime","timeString","date","Date","isNaN","getTime","toLocaleTimeString","hour","minute","formatDate","dateString","day","getDate","toString","padStart","month","getMonth","year","getFullYear","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","disabled","map","course","courseCreationId","courseName","typeOfTest","TypeOfTestId","TypeOfTestName","min","Array","from","length","_","_sectionsData$index","_sectionsData$index2","_sectionsData$index3","sectionName","noOfQuestions","QuestionLimit","test","TestName","testStartDate","testEndDate","formatDateAndTime","testStartTime","testEndTime","testCreationTableId","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/OTS/OTS-ADMIN/OTS-ADMIN/src/components/Testcreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Testcreation = () => {\r\n  const [testName, setTestName] = useState('');\r\n  const [courses, setCourses] = useState([]);\r\n  const [selectedCourse, setSelectedCourse] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [endTime, setEndTime] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [totalQuestions, setTotalQuestions] = useState('');\r\n  const [totalMarks, setTotalMarks] = useState('');\r\n  const [calculator, setCalculator] = useState('no');\r\n  const [status, setStatus] = useState('inactive');\r\n  const [typeOfTests, setTypeOfTests] = useState([]);\r\n  const [selectedtypeOfTest, setSelectedtypeOfTest] = useState('');\r\n  const [numberOfSections, setNumberOfSections] = useState(1);\r\n  const [QuestionLimitChecked, setQuestionLimitChecked] = useState(false);\r\n  const [sectionsData, setSectionsData] = useState([]);\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [testData, setTestData] = useState([]);\r\n  useEffect(() => {\r\n    fetch('http://localhost:3081/testcourses')\r\n      .then((response) => response.json())\r\n      .then((data) => setCourses(data))\r\n      .catch((error) => console.error('Error fetching courses:', error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCourse) {\r\n      fetch(`http://localhost:3081/course-typeoftests/${selectedCourse}`)\r\n        .then((response) => response.json())\r\n        .then((data) => setTypeOfTests(data))\r\n        .catch((error) => console.error('Error fetching course_typeoftests:', error));\r\n    }\r\n  }, [selectedCourse]);\r\n  const handleOpenForm = () => {\r\n    setIsFormVisible(true);\r\n  };\r\n\r\n  const handleCloseForm = () => {\r\n    setIsFormVisible(false);\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    setSelectedCourse(e.target.value);\r\n  };\r\n  const handleSelectTypeOfTest = (e) => {\r\n    setSelectedtypeOfTest(e.target.value);\r\n  }\r\n  const handleInputChange = (e) => {\r\n    setTestName(e.target.value);\r\n  };\r\n  const handleStartDateChange = (e) => {\r\n    setStartDate(e.target.value);\r\n  };\r\n\r\n  const handleStartTimeChange = (e) => {\r\n    setStartTime(e.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setEndDate(e.target.value);\r\n  };\r\n\r\n  const handleEndTimeChange = (e) => {\r\n    setEndTime(e.target.value);\r\n  };\r\n\r\n\r\n  const handleDurationChange = (e) => {\r\n    setDuration(e.target.value);\r\n  };\r\n\r\n  const handleTotalQuestionsChange = (e) => {\r\n    setTotalQuestions(e.target.value);\r\n  };\r\n\r\n  const handleTotalMarksChange = (e) => {\r\n    setTotalMarks(e.target.value);\r\n  };\r\n  const handleCalculatorChange = (e) => {\r\n    setCalculator(e.target.value);\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const handleQuestionLimitChange = (e) => {\r\n    setQuestionLimitChecked(e.target.checked);\r\n  };\r\n\r\n  const handleSectionChange = (e, index, field) => {\r\n    // Create a copy of the sectionsData array\r\n    const updatedSectionsData = [...sectionsData];\r\n\r\n    // Ensure that the array at the given index is initialized\r\n    if (!updatedSectionsData[index]) {\r\n      updatedSectionsData[index] = {};\r\n    }\r\n\r\n    // Update the specified field in the copied array\r\n    updatedSectionsData[index][field] = e.target.value;\r\n\r\n    // Set the updated array to the state\r\n    setSectionsData(updatedSectionsData);\r\n  };\r\n\r\n  const addSection = () => {\r\n    setNumberOfSections((prevSections) => prevSections + 1);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Log the sectionsData before making the request\r\n      console.log('Sections Data Before Request:', sectionsData);\r\n\r\n      // Assuming you have the testCreationTableId from the test creation\r\n      // const testCreationTableId = getTestCreationTableId();\r\n\r\n      // Make a request to create test and sections\r\n      const response = await fetch('http://localhost:3081/create-test', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          testName,\r\n          selectedCourse,\r\n          selectedtypeOfTest,\r\n          startDate,\r\n          startTime,\r\n          endDate,\r\n          endTime,\r\n          duration,\r\n          totalQuestions,\r\n          totalMarks,\r\n          calculator,\r\n          status,\r\n          sectionsData,  // Use the state variable directly\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const feachTestData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3081/test_creation_table\");\r\n        const data = await response.json(); // Convert the response to JSON\r\n        setTestData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching course data:\", error);\r\n      }\r\n    };\r\n    feachTestData();\r\n  }, []);\r\n  function formatTime(timeString) {\r\n    const date = new Date(timeString);\r\n    \r\n    if (isNaN(date.getTime())) {\r\n      // Handle the case where the date is invalid\r\n      return \"Invalid Date\";\r\n    }\r\n  \r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  }\r\n  function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Month is 0-based\r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {!isFormVisible && (\r\n        <button type=\"button\" onClick={handleOpenForm}>\r\n          Open Form\r\n        </button>\r\n      )}\r\n\r\n      {isFormVisible && (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <button type=\"button\" onClick={handleCloseForm}>\r\n            Close Form\r\n          </button>\r\n          <br />\r\n          <label>\r\n            Test Name:\r\n            <input type=\"text\" value={testName} onChange={handleInputChange} />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Select Course:\r\n            <select value={selectedCourse} onChange={handleSelectChange}>\r\n              <option value=\"\" disabled>Select a course</option>\r\n              {courses.map((course) => (\r\n                <option key={course.courseCreationId} value={course.courseCreationId}>\r\n                  {course.courseName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <br />\r\n\r\n          <div>\r\n            <label>\r\n              Type of Tests:\r\n              <select value={selectedtypeOfTest} onChange={handleSelectTypeOfTest}>\r\n                <option value=\"\" disabled>Select a type of test</option>\r\n                {typeOfTests.map((typeOfTest) => (\r\n                  <option key={typeOfTest.TypeOfTestId} value={typeOfTest.TypeOfTestId}>\r\n                    {typeOfTest.TypeOfTestName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n          </div>\r\n\r\n\r\n          <label>\r\n            Test  Start Date:\r\n            <input type=\"date\" value={startDate} onChange={handleStartDateChange} />\r\n          </label>\r\n          <label>\r\n            Start Time:\r\n            <input type=\"time\" value={startTime} onChange={handleStartTimeChange} />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Test End Date:\r\n            <input type=\"date\" value={endDate} onChange={handleEndDateChange} />\r\n          </label>\r\n          <label>\r\n            End Time:\r\n            <input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Duration (in minutes):\r\n            <input type=\"number\" value={duration} onChange={handleDurationChange} min=\"1\" />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Total Questions:\r\n            <input type=\"number\" value={totalQuestions} onChange={handleTotalQuestionsChange} min=\"1\" />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Total Marks:\r\n            <input type=\"number\" value={totalMarks} onChange={handleTotalMarksChange} min=\"1\" />\r\n          </label>\r\n          <br />\r\n          <div>\r\n            <label>SECTION</label>\r\n            <br />\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={QuestionLimitChecked}\r\n                onChange={handleQuestionLimitChange}\r\n              />\r\n              Question Limit:\r\n            </label>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Section</th>\r\n                  <th>No of Question</th>\r\n                  {QuestionLimitChecked && <th>Question Limit</th>}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Array.from({ length: numberOfSections }, (_, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={sectionsData[index]?.sectionName || ''}\r\n                        onChange={(e) => handleSectionChange(e, index, 'sectionName')}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={sectionsData[index]?.noOfQuestions || ''}\r\n                        onChange={(e) => handleSectionChange(e, index, 'noOfQuestions')}\r\n                      />\r\n                    </td>\r\n                    {QuestionLimitChecked && (\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={sectionsData[index]?.QuestionLimit || ''}\r\n                          onChange={(e) => handleSectionChange(e, index, 'QuestionLimit')}\r\n                        />\r\n                      </td>\r\n                    )}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <button type=\"button\" onClick={addSection}>\r\n              +\r\n            </button>\r\n          </div>\r\n          <br />\r\n          <label>\r\n            Calculator:\r\n            <select value={calculator} onChange={handleCalculatorChange}>\r\n              <option value=\"yes\">Yes</option>\r\n              <option value=\"no\">No</option>\r\n            </select>\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Status:\r\n            <select value={status} onChange={handleStatusChange}>\r\n              <option value=\"active\">Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n            </select>\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Submit</button>\r\n\r\n        </form>\r\n      )}\r\n\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Serial no</th>\r\n              <th>Test Name</th>\r\n              <th>Selected Course</th>\r\n              <th>Test Start Date</th>\r\n              <th>Test End Date</th>\r\n              <th>Start Time</th>\r\n              <th>End Time</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {testData.map((test, index) => (\r\n              <tr key={test.testCreationTableId}>\r\n                <td>{index + 1}</td>\r\n                <td>{test.TestName}</td>\r\n                <td>{test.courseName}</td>\r\n                <td>{formatDate(test.testStartDate)}</td>\r\n                <td>{formatDate(test.testEndDate)}</td>\r\n                <td>{formatDateAndTime(test.testStartTime)}</td>\r\n<td>{formatDateAndTime(test.testEndTime)}</td>\r\n                <td>{test.status}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Testcreation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}