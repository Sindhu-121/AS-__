{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\OTS\\\\OTS-ADMIN\\\\OTS-ADMIN\\\\src\\\\components\\\\NewExamUpdataion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewExamUpdataion = () => {\n  _s();\n  const [examName, setExamName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [subjects, setSubjects] = useState([]);\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  useEffect(() => {\n    // Fetch subjects from the API\n    fetch('http://localhost:3081/subjects').then(response => response.json()).then(data => setSubjects(data)).catch(error => console.error('Error fetching subjects:', error));\n  }, []);\n  const handleSubjectChange = subjectId => {\n    // Toggle the selected state of the subject\n    setSelectedSubjects(prevSelectedSubjects => {\n      if (prevSelectedSubjects.includes(subjectId)) {\n        return prevSelectedSubjects.filter(id => id !== subjectId);\n      } else {\n        return [...prevSelectedSubjects, subjectId];\n      }\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // You can handle form submission logic here\n    console.log('Exam Name:', examName);\n    console.log('Start Date:', startDate);\n    console.log('End Date:', endDate);\n    console.log('Selected Subjects:', selectedSubjects);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"examName\",\n        children: \"Exam Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"examName\",\n        value: examName,\n        onChange: e => setExamName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"startDate\",\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"startDate\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endDate\",\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"endDate\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subjects:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: subject.id,\n          value: subject.id,\n          checked: selectedSubjects.includes(subject.id),\n          onChange: () => handleSubjectChange(subject.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: subject.id,\n          children: subject.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, subject.subjectId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(NewExamUpdataion, \"XC+Esb9HIXl+r4DPEi5BKQq3Y1s=\");\n_c = NewExamUpdataion;\nexport default NewExamUpdataion;\nvar _c;\n$RefreshReg$(_c, \"NewExamUpdataion\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NewExamUpdataion","_s","examName","setExamName","startDate","setStartDate","endDate","setEndDate","subjects","setSubjects","selectedSubjects","setSelectedSubjects","fetch","then","response","json","data","catch","error","console","handleSubjectChange","subjectId","prevSelectedSubjects","includes","filter","id","handleSubmit","e","preventDefault","log","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","map","subject","checked","name","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/OTS/OTS-ADMIN/OTS-ADMIN/src/components/NewExamUpdataion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst NewExamUpdataion = () => {\r\n  const [examName, setExamName] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n   \r\n\r\n\r\n  useEffect(() => {\r\n    // Fetch subjects from the API\r\n    fetch('http://localhost:3081/subjects')\r\n      .then(response => response.json())\r\n      .then(data => setSubjects(data))\r\n      .catch(error => console.error('Error fetching subjects:', error));\r\n  }, []);\r\n  const handleSubjectChange = subjectId => {\r\n    // Toggle the selected state of the subject\r\n    setSelectedSubjects(prevSelectedSubjects => {\r\n      if (prevSelectedSubjects.includes(subjectId)) {\r\n        return prevSelectedSubjects.filter(id => id !== subjectId);\r\n      } else {\r\n        return [...prevSelectedSubjects, subjectId];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // You can handle form submission logic here\r\n    console.log('Exam Name:', examName);\r\n    console.log('Start Date:', startDate);\r\n    console.log('End Date:', endDate);\r\n    console.log('Selected Subjects:', selectedSubjects);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"examName\">Exam Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"examName\"\r\n          value={examName}\r\n          onChange={e => setExamName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"startDate\">Start Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"startDate\"\r\n          value={startDate}\r\n          onChange={e => setStartDate(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"endDate\">End Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"endDate\"\r\n          value={endDate}\r\n          onChange={e => setEndDate(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Subjects:</label>\r\n        {subjects.map(subject => (\r\n          <div key={subject.\tsubjectId}>\r\n            <input\r\n              type=\"checkbox\"\r\n              id={subject.id}\r\n              value={subject.id}\r\n              checked={selectedSubjects.includes(subject.id)}\r\n              onChange={() => handleSubjectChange(subject.id)}\r\n            />\r\n            <label htmlFor={subject.id}>{subject.name}</label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewExamUpdataion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}