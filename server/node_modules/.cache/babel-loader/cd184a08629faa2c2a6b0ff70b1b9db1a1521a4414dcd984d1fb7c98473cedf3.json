{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\OTS\\\\OTS-ADMIN\\\\OTS-ADMIN\\\\src\\\\FrontEnd\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const [sections, setSections] = useState([]);\n  const {\n    testCreationTableId\n  } = useParams();\n  useEffect(() => {\n    const fetchSections = async () => {\n      try {\n        const response = await fetch(`http://localhost:3081/quiz_all/${testCreationTableId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Received data:', data);\n        setSections(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchSections();\n  }, [testCreationTableId]); // Use testCreationTableId as a dependency to trigger fetch when it changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.values(sections).map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: section.sectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), section.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${question.question_img}`,\n          alt: `Question ${question.qustion_id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: question.option_img.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${option.option_img}`,\n              alt: `Option ${option.Option_Index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, question.qustion_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))]\n    }, section.sectionId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"wW/56WL+C2+SMXZSovAvTm+D7eA=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","QuizPage","_s","sections","setSections","testCreationTableId","fetchSections","response","fetch","ok","Error","status","data","json","console","log","error","children","Object","values","map","section","sectionName","fileName","_jsxFileName","lineNumber","columnNumber","questions","question","src","question_img","alt","qustion_id","option_img","option","index","Option_Index","sectionId","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/OTS/OTS-ADMIN/OTS-ADMIN/src/FrontEnd/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst QuizPage = () => {\r\n  const [sections, setSections] = useState([]);\r\n  const { testCreationTableId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchSections = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3081/quiz_all/${testCreationTableId}`);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Received data:', data);\r\n        setSections(data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchSections();\r\n  }, [testCreationTableId]); // Use testCreationTableId as a dependency to trigger fetch when it changes\r\n\r\n  return (\r\n    <div>\r\n      {Object.values(sections).map((section) => (\r\n        <div key={section.sectionId}>\r\n          <h2>{section.sectionName}</h2>\r\n          {section.questions.map((question) => (\r\n            <div key={question.qustion_id}>\r\n              {/* Display question image */}\r\n              <img src={`data:image/png;base64,${question.question_img}`} alt={`Question ${question.qustion_id}`} />\r\n\r\n              {/* Display option images */}\r\n              <ul>\r\n                {question.option_img.map((option, index) => (\r\n                  <li key={index}>\r\n                    <img src={`data:image/png;base64,${option.option_img}`} alt={`Option ${option.Option_Index}`} />\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}