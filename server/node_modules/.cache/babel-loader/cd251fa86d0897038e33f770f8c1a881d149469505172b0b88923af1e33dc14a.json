{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\OTS\\\\OTS-ADMIN\\\\OTS-ADMIN\\\\src\\\\components\\\\Testcreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testcreation = () => {\n  _s();\n  const [testName, setTestName] = useState(\"\");\n  const [courses, setCourses] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [totalQuestions, setTotalQuestions] = useState(\"\");\n  const [totalMarks, setTotalMarks] = useState(\"\");\n  const [calculator, setCalculator] = useState(\"no\");\n  const [status, setStatus] = useState(\"inactive\");\n  const [typeOfTests, setTypeOfTests] = useState([]);\n  const [selectedtypeOfTest, setSelectedtypeOfTest] = useState(\"\");\n  const [subjects, setSubjects] = useState([]);\n  const [selectedSubjects, setSelectedSubjects] = useState(\"\");\n  const [numberOfSections, setNumberOfSections] = useState(1);\n  const [QuestionLimitChecked, setQuestionLimitChecked] = useState(false);\n  const [sectionsData, setSectionsData] = useState([{\n    selectedSubjects: \"\",\n    sectionName: \"\",\n    noOfQuestions: \"\",\n    QuestionLimit: \"\"\n  }]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  const [testData, setTestData] = useState([]);\n  const [selectedInstruction, setSelectedInstruction] = useState(\"\");\n  const [instructionsData, setInstructionsData] = useState([]);\n  useEffect(() => {\n    const fetchInstructions = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3081/instructions\");\n        const data = await response.json();\n        setInstructionsData(data);\n      } catch (error) {\n        console.error(\"Error fetching instructions:\", error);\n      }\n    };\n    fetchInstructions();\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:3081/testcourses\").then(response => response.json()).then(data => setCourses(data)).catch(error => console.error(\"Error fetching courses:\", error));\n  }, []);\n  useEffect(() => {\n    if (selectedCourse) {\n      fetch(`http://localhost:3081/course-typeoftests/${selectedCourse}`).then(response => response.json()).then(data => setTypeOfTests(data)).catch(error => console.error(\"Error fetching course_typeoftests:\", error));\n    }\n  }, [selectedCourse]);\n  useEffect(() => {\n    if (selectedCourse) {\n      fetch(`http://localhost:3081/course-subjects/${selectedCourse}`).then(response => response.json()).then(data => {\n        console.log(\"Fetched subjects:\", data);\n        setSubjects(data);\n      }).catch(error => console.error(\"Error fetching course-subjects:\", error));\n    }\n  }, [selectedCourse]);\n  const handleOpenForm = () => {\n    setIsFormVisible(true);\n  };\n  const handleCloseForm = () => {\n    setIsFormVisible(false);\n  };\n  const handleSelectChange = e => {\n    setSelectedCourse(e.target.value);\n  };\n  const handleSelectTypeOfTest = e => {\n    setSelectedtypeOfTest(e.target.value);\n  };\n  const handleSelectSubjects = e => {\n    setSelectedSubjects(e.target.value);\n  };\n  const handleInputChange = e => {\n    setTestName(e.target.value);\n  };\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n  };\n  const handleStartTimeChange = e => {\n    setStartTime(e.target.value);\n  };\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n  };\n  const handleEndTimeChange = e => {\n    setEndTime(e.target.value);\n  };\n  const handleDurationChange = e => {\n    setDuration(e.target.value);\n  };\n  const handleTotalQuestionsChange = e => {\n    setTotalQuestions(e.target.value);\n  };\n  const handleTotalMarksChange = e => {\n    setTotalMarks(e.target.value);\n  };\n  const handleInstructionChange = e => {\n    setSelectedInstruction(e.target.value);\n  };\n  const handleCalculatorChange = e => {\n    setCalculator(e.target.value);\n  };\n  const handleStatusChange = e => {\n    setStatus(e.target.value);\n  };\n  const handleQuestionLimitChange = e => {\n    setQuestionLimitChecked(e.target.checked);\n  };\n\n  // const handleSectionChange = (e, index, field) => {\n  //   // Create a copy of the sectionsData array\n  //   const updatedSectionsData = [...sectionsData];\n\n  //   // Ensure that the array at the given index is initialized\n  //   if (!updatedSectionsData[index]) {\n  //     updatedSectionsData[index] = {};\n  //   }\n\n  //   // Update the specified field in the copied array\n  //   updatedSectionsData[index][field] = e.target.value;\n\n  //   // Set the updated array to the state\n  //   setSectionsData(updatedSectionsData);\n  // };\n\n  const addSection = () => {\n    setNumberOfSections(prevSections => prevSections + 1);\n  };\n  const handleShowTotalSectionsChange = () => {\n    setShowTotalSections(!showTotalSections);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Log the sectionsData before making the request\n      console.log(\"Sections Data Before Request:\", sectionsData);\n\n      // Assuming you have the testCreationTableId from the test creation\n      // const testCreationTableId = getTestCreationTableId();\n\n      // Make a request to create test and sections\n      const response = await fetch(\"http://localhost:3081/create-test\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          testName,\n          selectedCourse,\n          selectedtypeOfTest,\n          startDate,\n          startTime,\n          endDate,\n          endTime,\n          duration,\n          totalQuestions,\n          totalMarks,\n          calculator,\n          status,\n          sectionsData,\n          selectedInstruction\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  useEffect(() => {\n    const feachTestData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3081/test_creation_table\");\n        const data = await response.json(); // Convert the response to JSON\n        setTestData(data);\n      } catch (error) {\n        console.error(\"Error fetching course data:\", error);\n      }\n    };\n    feachTestData();\n  }, []);\n  function formatTime(dateTimeString) {\n    const formattedTime = moment(dateTimeString, \"HH:mm:ss.SSSSSS\").format(\"HH:mm\");\n    return formattedTime !== \"Invalid date\" ? formattedTime : \"Invalid Time\";\n  }\n\n  // function formatDate(dateString) {\n  //   const date = new Date(dateString);\n  //   const day = date.getDate().toString().padStart(2, \"0\");\n  //   const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Month is 0-based\n  //   const year = date.getFullYear();\n  //   return `${day}/${month}/${year}`;\n  // }\n  const handleDelete = async testCreationTableId => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this course?\");\n    if (confirmDelete) {\n      try {\n        const response = await fetch(`http://localhost:3081/test_table_data_delete/${testCreationTableId}`, {\n          method: \"DELETE\"\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        console.log(result.message);\n        const updatedtestData = testData.filter(test => test.testCreationTableId !== testCreationTableId);\n        console.log(\"Before:\", testData);\n        console.log(\"After:\", updatedtestData);\n        setTestData(updatedtestData);\n      } catch (error) {\n        console.error(\"Error deleting course:\", error);\n      }\n    } else {\n      // The user canceled the deletion\n      console.log(\"Deletion canceled.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isFormVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleOpenForm,\n      children: \"Open Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCloseForm,\n        children: \"Close Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Test Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: testName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Course:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCourse,\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: course.courseCreationId,\n            children: course.courseName\n          }, course.courseCreationId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Type of Tests:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedtypeOfTest,\n            onChange: handleSelectTypeOfTest,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a type of test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), typeOfTests.map(typeOfTest => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: typeOfTest.TypeOfTestId,\n              children: typeOfTest.TypeOfTestName\n            }, typeOfTest.TypeOfTestId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Test Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: handleStartDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: startTime,\n          onChange: handleStartTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Test End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: handleEndDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: endTime,\n          onChange: handleEndTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Duration (in minutes):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: duration,\n          onChange: handleDurationChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Total Questions:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: totalQuestions,\n          onChange: handleTotalQuestionsChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Total Marks:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: totalMarks,\n          onChange: handleTotalMarksChange,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"SECTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showTotalSections,\n            onChange: handleShowTotalSectionsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 9\n          }, this), \"Show Total Sections\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: QuestionLimitChecked,\n            onChange: handleQuestionLimitChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), \"Question Limit:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), showTotalSections && /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subjects:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"No of Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), QuestionLimitChecked && /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Question Limit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Array.from({\n              length: numberOfSections\n            }, (_, index) => {\n              var _sectionsData$index, _sectionsData$index2, _sectionsData$index3, _sectionsData$index4;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: ((_sectionsData$index = sectionsData[index]) === null || _sectionsData$index === void 0 ? void 0 : _sectionsData$index.selectedSubjects) || \"\",\n                      onChange: e => handleSectionChange(e, index, \"selectedSubjects\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        disabled: true,\n                        children: \"Select a Subject\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 430,\n                        columnNumber: 27\n                      }, this), subjects.map(Subject => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: Subject.subjectId,\n                        children: Subject.subjectName\n                      }, Subject.subjectId, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 434,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: ((_sectionsData$index2 = sectionsData[index]) === null || _sectionsData$index2 === void 0 ? void 0 : _sectionsData$index2.sectionName) || \"\",\n                    onChange: e => handleSectionChange(e, index, \"sectionName\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: ((_sectionsData$index3 = sectionsData[index]) === null || _sectionsData$index3 === void 0 ? void 0 : _sectionsData$index3.noOfQuestions) || \"\",\n                    onChange: e => handleSectionChange(e, index, \"noOfQuestions\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this), QuestionLimitChecked && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: ((_sectionsData$index4 = sectionsData[index]) === null || _sectionsData$index4 === void 0 ? void 0 : _sectionsData$index4.QuestionLimit) || \"\",\n                    onChange: e => handleSectionChange(e, index, \"QuestionLimit\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addSection,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Instructions:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedInstruction,\n          onChange: handleInstructionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select an instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), instructionsData.map(instruction => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: instruction.instructionId,\n            children: instruction.instructionHeading\n          }, instruction.instructionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Calculator:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: calculator,\n          onChange: handleCalculatorChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: status,\n          onChange: handleStatusChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"active\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"inactive\",\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Serial no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Test Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Selected Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Test Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Test End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: testData.map((test, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: test.TestName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: test.courseName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: test.testStartDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: test.testEndDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatTime(test.testStartTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatTime(test.testEndTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: test.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/testupdate/${test.testCreationTableId}`,\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"courseupdate_btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa-solid fa-pencil\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"coursedelte_btn\",\n                  onClick: () => handleDelete(test.testCreationTableId),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-regular fa-trash-can\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)]\n          }, test.testCreationTableId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n_s(Testcreation, \"10lmWJZKMQdGDH1a2Xeu+c0w8z4=\");\n_c = Testcreation;\nexport default Testcreation;\nvar _c;\n$RefreshReg$(_c, \"Testcreation\");","map":{"version":3,"names":["React","useState","useEffect","moment","Link","jsxDEV","_jsxDEV","Testcreation","_s","testName","setTestName","courses","setCourses","selectedCourse","setSelectedCourse","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","duration","setDuration","totalQuestions","setTotalQuestions","totalMarks","setTotalMarks","calculator","setCalculator","status","setStatus","typeOfTests","setTypeOfTests","selectedtypeOfTest","setSelectedtypeOfTest","subjects","setSubjects","selectedSubjects","setSelectedSubjects","numberOfSections","setNumberOfSections","QuestionLimitChecked","setQuestionLimitChecked","sectionsData","setSectionsData","sectionName","noOfQuestions","QuestionLimit","isFormVisible","setIsFormVisible","testData","setTestData","selectedInstruction","setSelectedInstruction","instructionsData","setInstructionsData","fetchInstructions","response","fetch","data","json","error","console","then","catch","log","handleOpenForm","handleCloseForm","handleSelectChange","e","target","value","handleSelectTypeOfTest","handleSelectSubjects","handleInputChange","handleStartDateChange","handleStartTimeChange","handleEndDateChange","handleEndTimeChange","handleDurationChange","handleTotalQuestionsChange","handleTotalMarksChange","handleInstructionChange","handleCalculatorChange","handleStatusChange","handleQuestionLimitChange","checked","addSection","prevSections","handleShowTotalSectionsChange","setShowTotalSections","showTotalSections","handleSubmit","preventDefault","method","headers","body","JSON","stringify","feachTestData","formatTime","dateTimeString","formattedTime","format","handleDelete","testCreationTableId","confirmDelete","window","confirm","ok","Error","result","message","updatedtestData","filter","test","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","disabled","map","course","courseCreationId","courseName","typeOfTest","TypeOfTestId","TypeOfTestName","min","Array","from","length","_","index","_sectionsData$index","_sectionsData$index2","_sectionsData$index3","_sectionsData$index4","handleSectionChange","Subject","subjectId","subjectName","instruction","instructionId","instructionHeading","TestName","testStartDate","testEndDate","testStartTime","testEndTime","to","className","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/OTS/OTS-ADMIN/OTS-ADMIN/src/components/Testcreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Testcreation = () => {\r\n  const [testName, setTestName] = useState(\"\");\r\n  const [courses, setCourses] = useState([]);\r\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n  const [totalQuestions, setTotalQuestions] = useState(\"\");\r\n  const [totalMarks, setTotalMarks] = useState(\"\");\r\n  const [calculator, setCalculator] = useState(\"no\");\r\n  const [status, setStatus] = useState(\"inactive\");\r\n  const [typeOfTests, setTypeOfTests] = useState([]);\r\n  const [selectedtypeOfTest, setSelectedtypeOfTest] = useState(\"\");\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [selectedSubjects, setSelectedSubjects] = useState(\"\");\r\n  const [numberOfSections, setNumberOfSections] = useState(1);\r\n  const [QuestionLimitChecked, setQuestionLimitChecked] = useState(false);\r\n  const [sectionsData, setSectionsData] = useState([\r\n    {\r\n      selectedSubjects: \"\",\r\n      sectionName: \"\",\r\n      noOfQuestions: \"\",\r\n      QuestionLimit: \"\",\r\n    },\r\n  ]);\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [testData, setTestData] = useState([]);\r\n  const [selectedInstruction, setSelectedInstruction] = useState(\"\");\r\n  const [instructionsData, setInstructionsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchInstructions = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3081/instructions\");\r\n        const data = await response.json();\r\n        setInstructionsData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching instructions:\", error);\r\n      }\r\n    };\r\n\r\n    fetchInstructions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3081/testcourses\")\r\n      .then((response) => response.json())\r\n      .then((data) => setCourses(data))\r\n      .catch((error) => console.error(\"Error fetching courses:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCourse) {\r\n      fetch(`http://localhost:3081/course-typeoftests/${selectedCourse}`)\r\n        .then((response) => response.json())\r\n        .then((data) => setTypeOfTests(data))\r\n        .catch((error) =>\r\n          console.error(\"Error fetching course_typeoftests:\", error)\r\n        );\r\n    }\r\n  }, [selectedCourse]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCourse) {\r\n      fetch(`http://localhost:3081/course-subjects/${selectedCourse}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Fetched subjects:\", data);\r\n          setSubjects(data);\r\n        })\r\n        .catch((error) =>\r\n          console.error(\"Error fetching course-subjects:\", error)\r\n        );\r\n    }\r\n  }, [selectedCourse]);\r\n\r\n  const handleOpenForm = () => {\r\n    setIsFormVisible(true);\r\n  };\r\n\r\n  const handleCloseForm = () => {\r\n    setIsFormVisible(false);\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    setSelectedCourse(e.target.value);\r\n  };\r\n  const handleSelectTypeOfTest = (e) => {\r\n    setSelectedtypeOfTest(e.target.value);\r\n  };\r\n\r\n  const handleSelectSubjects = (e) => {\r\n    setSelectedSubjects(e.target.value);\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setTestName(e.target.value);\r\n  };\r\n  const handleStartDateChange = (e) => {\r\n    setStartDate(e.target.value);\r\n  };\r\n\r\n  const handleStartTimeChange = (e) => {\r\n    setStartTime(e.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setEndDate(e.target.value);\r\n  };\r\n\r\n  const handleEndTimeChange = (e) => {\r\n    setEndTime(e.target.value);\r\n  };\r\n\r\n  const handleDurationChange = (e) => {\r\n    setDuration(e.target.value);\r\n  };\r\n\r\n  const handleTotalQuestionsChange = (e) => {\r\n    setTotalQuestions(e.target.value);\r\n  };\r\n\r\n  const handleTotalMarksChange = (e) => {\r\n    setTotalMarks(e.target.value);\r\n  };\r\n  const handleInstructionChange = (e) => {\r\n    setSelectedInstruction(e.target.value);\r\n  };\r\n  const handleCalculatorChange = (e) => {\r\n    setCalculator(e.target.value);\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const handleQuestionLimitChange = (e) => {\r\n    setQuestionLimitChecked(e.target.checked);\r\n  };\r\n\r\n  // const handleSectionChange = (e, index, field) => {\r\n  //   // Create a copy of the sectionsData array\r\n  //   const updatedSectionsData = [...sectionsData];\r\n\r\n  //   // Ensure that the array at the given index is initialized\r\n  //   if (!updatedSectionsData[index]) {\r\n  //     updatedSectionsData[index] = {};\r\n  //   }\r\n\r\n  //   // Update the specified field in the copied array\r\n  //   updatedSectionsData[index][field] = e.target.value;\r\n\r\n  //   // Set the updated array to the state\r\n  //   setSectionsData(updatedSectionsData);\r\n  // };\r\n\r\n  const addSection = () => {\r\n    setNumberOfSections((prevSections) => prevSections + 1);\r\n  };\r\n  \r\n  const handleShowTotalSectionsChange = () => {\r\n    setShowTotalSections(!showTotalSections);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Log the sectionsData before making the request\r\n      console.log(\"Sections Data Before Request:\", sectionsData);\r\n\r\n      // Assuming you have the testCreationTableId from the test creation\r\n      // const testCreationTableId = getTestCreationTableId();\r\n\r\n      // Make a request to create test and sections\r\n      const response = await fetch(\"http://localhost:3081/create-test\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          testName,\r\n          selectedCourse,\r\n          selectedtypeOfTest,\r\n          startDate,\r\n          startTime,\r\n          endDate,\r\n          endTime,\r\n          duration,\r\n          totalQuestions,\r\n          totalMarks,\r\n          calculator,\r\n          status,\r\n          sectionsData,\r\n          selectedInstruction,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const feachTestData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:3081/test_creation_table\"\r\n        );\r\n        const data = await response.json(); // Convert the response to JSON\r\n        setTestData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching course data:\", error);\r\n      }\r\n    };\r\n    feachTestData();\r\n  }, []);\r\n\r\n  function formatTime(dateTimeString) {\r\n    const formattedTime = moment(dateTimeString, \"HH:mm:ss.SSSSSS\").format(\r\n      \"HH:mm\"\r\n    );\r\n    return formattedTime !== \"Invalid date\" ? formattedTime : \"Invalid Time\";\r\n  }\r\n\r\n  // function formatDate(dateString) {\r\n  //   const date = new Date(dateString);\r\n  //   const day = date.getDate().toString().padStart(2, \"0\");\r\n  //   const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Month is 0-based\r\n  //   const year = date.getFullYear();\r\n  //   return `${day}/${month}/${year}`;\r\n  // }\r\n  const handleDelete = async (testCreationTableId) => {\r\n    const confirmDelete = window.confirm(\r\n      \"Are you sure you want to delete this course?\"\r\n    );\r\n    if (confirmDelete) {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3081/test_table_data_delete/${testCreationTableId}`,\r\n          {\r\n            method: \"DELETE\",\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n        console.log(result.message);\r\n        const updatedtestData = testData.filter(\r\n          (test) => test.testCreationTableId !== testCreationTableId\r\n        );\r\n        console.log(\"Before:\", testData);\r\n        console.log(\"After:\", updatedtestData);\r\n        setTestData(updatedtestData);\r\n      } catch (error) {\r\n        console.error(\"Error deleting course:\", error);\r\n      }\r\n    } else {\r\n      // The user canceled the deletion\r\n      console.log(\"Deletion canceled.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isFormVisible && (\r\n        <button type=\"button\" onClick={handleOpenForm}>\r\n          Open Form\r\n        </button>\r\n      )}\r\n\r\n      {isFormVisible && (\r\n        <form onSubmit={handleSubmit}>\r\n          <button type=\"button\" onClick={handleCloseForm}>\r\n            Close Form\r\n          </button>\r\n          <br />\r\n          <label>\r\n            Test Name:\r\n            <input type=\"text\" value={testName} onChange={handleInputChange} />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Select Course:\r\n            <select value={selectedCourse} onChange={handleSelectChange}>\r\n              <option value=\"\" disabled>\r\n                Select a course\r\n              </option>\r\n              {courses.map((course) => (\r\n                <option\r\n                  key={course.courseCreationId}\r\n                  value={course.courseCreationId}\r\n                >\r\n                  {course.courseName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <br />\r\n\r\n          <div>\r\n            <label>\r\n              Type of Tests:\r\n              <select\r\n                value={selectedtypeOfTest}\r\n                onChange={handleSelectTypeOfTest}\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select a type of test\r\n                </option>\r\n                {typeOfTests.map((typeOfTest) => (\r\n                  <option\r\n                    key={typeOfTest.TypeOfTestId}\r\n                    value={typeOfTest.TypeOfTestId}\r\n                  >\r\n                    {typeOfTest.TypeOfTestName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n          </div>\r\n\r\n          <label>\r\n            Test Start Date:\r\n            <input\r\n              type=\"date\"\r\n              value={startDate}\r\n              onChange={handleStartDateChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Start Time:\r\n            <input\r\n              type=\"time\"\r\n              value={startTime}\r\n              onChange={handleStartTimeChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Test End Date:\r\n            <input type=\"date\" value={endDate} onChange={handleEndDateChange} />\r\n          </label>\r\n          <label>\r\n            End Time:\r\n            <input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Duration (in minutes):\r\n            <input\r\n              type=\"number\"\r\n              value={duration}\r\n              onChange={handleDurationChange}\r\n              min=\"1\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Total Questions:\r\n            <input\r\n              type=\"number\"\r\n              value={totalQuestions}\r\n              onChange={handleTotalQuestionsChange}\r\n              min=\"1\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Total Marks:\r\n            <input\r\n              type=\"number\"\r\n              value={totalMarks}\r\n              onChange={handleTotalMarksChange}\r\n              min=\"1\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <div>\r\n            <label>SECTION</label>\r\n            <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={showTotalSections}\r\n          onChange={handleShowTotalSectionsChange}\r\n        />\r\n        Show Total Sections\r\n      </label>\r\n            <br />\r\n           \r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={QuestionLimitChecked}\r\n                onChange={handleQuestionLimitChange}\r\n              />\r\n              Question Limit:\r\n            </label>\r\n            {showTotalSections && (\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Subjects:</th>\r\n                  <th>Section</th>\r\n                  <th>No of Question</th>\r\n                  {QuestionLimitChecked && <th>Question Limit</th>}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Array.from({ length: numberOfSections }, (_, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>\r\n                      <div>\r\n                        <select\r\n                          value={sectionsData[index]?.selectedSubjects || \"\"}\r\n                          onChange={(e) =>\r\n                            handleSectionChange(e, index, \"selectedSubjects\")\r\n                          }\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            Select a Subject\r\n                          </option>\r\n                          {subjects.map((Subject) => (\r\n                            <option\r\n                              key={Subject.subjectId}\r\n                              value={Subject.subjectId}\r\n                            >\r\n                              {Subject.subjectName}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={sectionsData[index]?.sectionName || \"\"}\r\n                        onChange={(e) =>\r\n                          handleSectionChange(e, index, \"sectionName\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={sectionsData[index]?.noOfQuestions || \"\"}\r\n                        onChange={(e) =>\r\n                          handleSectionChange(e, index, \"noOfQuestions\")\r\n                        }\r\n                      />\r\n                    </td>\r\n                    {QuestionLimitChecked && (\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={sectionsData[index]?.QuestionLimit || \"\"}\r\n                          onChange={(e) =>\r\n                            handleSectionChange(e, index, \"QuestionLimit\")\r\n                          }\r\n                        />\r\n                      </td>\r\n                    )}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            )}\r\n            <button type=\"button\" onClick={addSection}>\r\n              +\r\n            </button>\r\n          </div>\r\n          <br />\r\n          <label>\r\n            Instructions:\r\n            <select\r\n              value={selectedInstruction}\r\n              onChange={handleInstructionChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select an instruction\r\n              </option>\r\n              {instructionsData.map((instruction) => (\r\n                <option\r\n                  key={instruction.instructionId}\r\n                  value={instruction.instructionId}\r\n                >\r\n                  {instruction.instructionHeading}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Calculator:\r\n            <select value={calculator} onChange={handleCalculatorChange}>\r\n              <option value=\"yes\">Yes</option>\r\n              <option value=\"no\">No</option>\r\n            </select>\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Status:\r\n            <select value={status} onChange={handleStatusChange}>\r\n              <option value=\"active\">Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n            </select>\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Serial no</th>\r\n              <th>Test Name</th>\r\n              <th>Selected Course</th>\r\n              <th>Test Start Date</th>\r\n              <th>Test End Date</th>\r\n              <th>Start Time</th>\r\n              <th>End Time</th>\r\n              <th>Status</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {testData.map((test, index) => (\r\n              <tr key={test.testCreationTableId}>\r\n                <td>{index + 1}</td>\r\n                <td>{test.TestName}</td>\r\n                <td>{test.courseName}</td>\r\n                <td>{test.testStartDate}</td>\r\n                <td>{test.testEndDate}</td>\r\n                <td>{formatTime(test.testStartTime)}</td>\r\n                <td>{formatTime(test.testEndTime)}</td>\r\n                <td>{test.status}</td>\r\n                <td>\r\n                  <div>\r\n                    <Link to={`/testupdate/${test.testCreationTableId}`}>\r\n                      {\" \"}\r\n                      <button className=\"courseupdate_btn\">\r\n                        <i className=\"fa-solid fa-pencil\"></i>\r\n                      </button>\r\n                    </Link>\r\n                    <button\r\n                      className=\"coursedelte_btn\"\r\n                      onClick={() => handleDelete(test.testCreationTableId)}\r\n                    >\r\n                      <i className=\"fa-regular fa-trash-can\"></i>\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Testcreation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}