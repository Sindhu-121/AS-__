{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\OTS\\\\OTS-ADMIN\\\\OTS-ADMIN\\\\src\\\\components\\\\Coursecreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./admin.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Coursecreation = () => {\n  _s();\n  const [typeOfTest, setTypeOfTest] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [selectedexams, setSelectedexams] = useState(\"\");\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\n  const [selectedtypeofQuestion, setSelectedtypeofQuestion] = useState([]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [subjectsData, setSubjectsData] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [courseData, setCourseData] = useState([]);\n  // const [resetForm, setResetForm] = useState(false);\n\n  const resetFormFields = () => {\n    // Reset form fields\n    setFormData({\n      courseName: \"\",\n      examId: \"\",\n      typeOfTestId: \"\",\n      questiontypes: \"\",\n      courseStartDate: \"\",\n      courseEndDate: \"\",\n      cost: \"\",\n      discount: \"\",\n      discountAmount: \"\",\n      totalPrice: \"\"\n    });\n    // Reset selected subjects and question types\n    setSelectedSubjects([]);\n    setSelectedtypeofQuestion([]);\n\n    // Reset form visibility\n    setIsFormOpen(false);\n  };\n\n  // const toggleFormVisibility = () => {\n  //   setIsFormOpen((prevIsFormOpen) => !prevIsFormOpen);\n\n  //   // Reset the form when closing it\n  //   if (isFormOpen) {\n  //     resetFormFields();\n  //   }\n  // };\n\n  const [formData, setFormData] = useState({\n    courseName: \"\",\n    examId: \"\",\n    typeOfTestId: \"\",\n    questiontypes: \"\",\n    courseStartDate: \"\",\n    courseEndDate: \"\",\n    cost: \"\",\n    discount: \"\",\n    discountAmount: \"\",\n    totalPrice: \"\"\n  });\n  useEffect(() => {\n    const fetchSelectedExam = async () => {\n      try {\n        const response = await fetch(`http://localhost:3081/courese-exams/${selectedexams}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        // console.log(\"Fetched Selected Exam:\", data);\n        // Now 'data' contains the selected exam details, including examName\n      } catch (error) {\n        console.error(\"Error fetching selected exam:\", error);\n      }\n    };\n\n    // Call the function when selectedexams changes\n    fetchSelectedExam();\n  }, [selectedexams]);\n  useEffect(() => {\n    const fetchCourseData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3081/course_creation_table\");\n        const result = await response.json();\n\n        // Ensure that subjects and typeofQuestion are arrays\n        const coursesWithArrays = result.map(course => ({\n          ...course,\n          subjects: course.subjects ? course.subjects.split(\", \") : [],\n          typeofQuestion: course.question_types ? course.question_types.split(\", \") : []\n        }));\n\n        // console.log(\"Fetched Course Data:\", coursesWithArrays);\n        setCourseData(coursesWithArrays);\n        // setCourseData(fetchedData);\n      } catch (error) {\n        console.error(\"Error fetching course data:\", error);\n      }\n    };\n    fetchCourseData();\n  }, []);\n  useEffect(() => {\n    const fetchTypeOfTest = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3081/type_of_tests\");\n        const result = await response.json();\n        setTypeOfTest(result);\n      } catch (error) {\n        console.error(\"Error fetching Type of questions:\", error);\n      }\n    };\n    fetchTypeOfTest();\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:3081/courese-exams\").then(response => response.json()).then(data => {\n      setExams(data);\n    }).catch(error => console.error(\"Error fetching exams:\", error));\n  }, []);\n  const handleexams = async event => {\n    const selectedExamId = event.target.value;\n    console.log(\"Selected Exam ID:\", selectedExamId);\n    setSelectedexams(selectedExamId);\n    console.log(\"Selected Exam ID (after setting):\", selectedexams);\n    try {\n      const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\n      const data = await response.json();\n      console.log(\"Subjects Data:\", data); // Log the fetched data\n      setSubjectsData(data); // Update subjectsData state\n      setSelectedSubjects([]); // Reset selected subjects\n    } catch (error) {\n      console.error(\"Error fetching subjects:\", error);\n    }\n    setSelectedexams(selectedExamId);\n  };\n  const handleSubjectChange = (event, subjectId) => {\n    const {\n      checked\n    } = event.target;\n    // Fetch the subject details from subjectsData using subjectId\n    const subject = subjectsData.find(subj => subj.subjectId === subjectId);\n    if (subject) {\n      // If checked, add the subject to the selectedSubjects array\n      // If unchecked, remove the subject from the selectedSubjects array\n      setSelectedSubjects(prevSelectedSubjects => {\n        if (checked) {\n          return [...prevSelectedSubjects, subjectId];\n        } else {\n          return prevSelectedSubjects.filter(id => id !== subjectId);\n        }\n      });\n    }\n  };\n  const handleQuestionChange = (event, questionTypeId) => {\n    const {\n      checked\n    } = event.target;\n    setSelectedtypeofQuestion(prevSelectedQuestions => {\n      if (checked) {\n        return [...prevSelectedQuestions, questionTypeId];\n      } else {\n        return prevSelectedQuestions.filter(id => id !== questionTypeId);\n      }\n    });\n  };\n  useEffect(() => {\n    const fetchTypeOfQuestion = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3081/type_of_questions\");\n        const result = await response.json();\n        // console.log(\"Type of Questions Data:\", result); // Add this line to log the data\n        setTypeofQuestion(result);\n      } catch (error) {\n        console.error(\"Error fetching Type of questions:\", error);\n      }\n    };\n    fetchTypeOfQuestion();\n  }, []);\n  const handleStartDateChange = e => {\n    const formattedDate = e.target.value;\n    setStartDate(formattedDate);\n  };\n  const handleEndDateChange = e => {\n    const formattedDate = e.target.value;\n    setEndDate(formattedDate);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      checked\n    } = e.target;\n    // let selectedTypeOfTest;\n\n    if (name === \"typeOfTestId\") {\n      // If it's a checkbox, update the selected type of test\n      setTypeOfTest(prevTypeOfTest => checked ? [...prevTypeOfTest, value] : prevTypeOfTest.filter(type => type !== value));\n    } else {\n      // For other fields, update the form data\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        [name]: value\n      }));\n    }\n    if (name === \"cost\" || name === \"discount\") {\n      const cost = name === \"cost\" ? parseFloat(value) : formData.cost;\n      const discount = name === \"discount\" ? parseFloat(value) : formData.discount;\n      const discountAmount = !isNaN(cost) && !isNaN(discount) ? cost * discount / 100 : \"\";\n      const totalPrice = !isNaN(cost) && !isNaN(discountAmount) ? cost - discountAmount : \"\";\n      setFormData({\n        ...formData,\n        typeOfTest: selectedTypeOfTest || \"\",\n        examId: selectedexams,\n        subjects: selectedSubjects,\n        typeofQuestion: selectedtypeofQuestion,\n        courseStartDate: startDate,\n        courseEndDate: endDate,\n        cost: cost,\n        discount: discount,\n        discountAmount: discountAmount,\n        totalPrice: totalPrice\n      });\n    } else if (name === \"courseStartDate\" || name === \"courseEndDate\") {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const requiredFields = [\"courseName\", \"typeOfTestId\", \"examId\", \"courseStartDate\", \"courseEndDate\", \"cost\", \"discount\", \"totalPrice\"];\n    const isEmptyField = requiredFields.some(field => !formData[field]);\n    if (isEmptyField) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n    window.location.reload();\n    resetFormFields();\n    // Prepare the data for submission\n    const data = {\n      ...formData,\n      typeOfTest,\n      examId: selectedexams,\n      subjects: selectedSubjects,\n      typeofQuestion: selectedtypeofQuestion // Assuming selectedtypeofQuestion is an array\n    };\n\n    // Submit the data to the server\n    try {\n      const response = await fetch(\"http://localhost:3081/course-creation\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n\n      // Check if the result contains the expected structure\n      if (result && result.courseCreationId) {\n        const courseCreationId = result.courseCreationId;\n\n        // Use the courseCreationId in the second fetch to add subjects\n        const subjectsResponse = await fetch(\"http://localhost:3081/course_type_of_question\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            courseCreationId,\n            subjectIds: selectedSubjects,\n            quesionTypeIds: selectedtypeofQuestion\n          })\n        });\n        const subjectsResult = await subjectsResponse.json();\n        console.log(\"Subjects Result:\", subjectsResult);\n        console.log(result);\n        if (result.success) {\n          console.log(\"Course created successfully\");\n        } else {\n          console.log(\"Failed to create course:\", result.error);\n        }\n      } else {\n        console.log(\"Failed to create course. Unexpected response:\", result);\n      }\n    } catch (error) {\n      console.error(\"Error submitting course data:\", error);\n      // Handle error or show an error message to the user\n    }\n  };\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Month is 0-based\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n  const handleDelete = async courseCreationId => {\n    // Display a confirmation dialog before deleting\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this course?\");\n    if (confirmDelete) {\n      try {\n        const response = await fetch(`http://localhost:3081/course_creation_table_Delete/${courseCreationId}`, {\n          method: \"DELETE\"\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        console.log(result.message);\n        const updatedCourseData = courseData.filter(course => course.courseCreationId !== courseCreationId);\n        console.log(\"Before:\", courseData);\n        console.log(\"After:\", updatedCourseData);\n        setCourseData(updatedCourseData);\n      } catch (error) {\n        console.error(\"Error deleting course:\", error);\n      }\n    } else {\n      // The user canceled the deletion\n      console.log(\"Deletion canceled.\");\n    }\n  };\n  const openForm = () => {\n    setIsFormOpen(true);\n    if (isFormOpen) {\n      resetFormFields();\n    }\n  };\n  const closeForm = () => {\n    setIsFormOpen(false);\n    if (isFormOpen) {\n      resetFormFields();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course_container_heder\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), isFormOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"courses_close_btn\",\n            type: \"button\",\n            onClick: closeForm,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-circle-xmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"course_frominput_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"courseName\",\n                children: \"Course Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"courseName\",\n                name: \"courseName\",\n                value: formData.courseName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Type of Test:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: typeOfTest.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"course_checkbox_continer course_frominput_container_media\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: `typeOfTest-${type.typeOfTestId}`,\n                    name: `typeOfTest-${type.typeOfTestId}`,\n                    value: type.typeOfTestId,\n                    checked: formData.typeOfTestId === type.typeOfTestId,\n                    onChange: e => handleChange(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `typeOfTest-${type.typeOfTestId}`,\n                    children: type.typeOfTestName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 25\n                  }, this)]\n                }, type.typeOfTestId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Select Exam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"course_frominput_container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"exams\",\n                  children: \"Select Exam:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"exams\",\n                  value: selectedexams,\n                  onChange: handleexams,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select exams\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 23\n                  }, this), exams.map(exams => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: exams.examId,\n                    children: exams.examName\n                  }, exams.examId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"course_frominput_container\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Select Subjects:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: subjectsData.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"course_frominput_container \",\n                    id: \"course_frominput_container_media\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      id: `subject-${subject.subjectId}`,\n                      name: `subject-${subject.subjectId}`,\n                      value: subject.subjectId,\n                      checked: selectedSubjects.includes(subject.subjectId),\n                      onChange: e => handleSubjectChange(e, subject.subjectId)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `subject-${subject.subjectId}`,\n                      children: subject.subjectName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 27\n                    }, this)]\n                  }, subject.subjectId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"course_frominput_container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"type of Questions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"course_checkbox_continer_content\",\n                children: typeofQuestion.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"course_checkbox_continer course_frominput_container_media\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: `question-${type.quesionTypeId}`,\n                    name: `question-${type.quesionTypeId}`,\n                    value: type.quesionTypeId,\n                    checked: selectedtypeofQuestion.includes(type.quesionTypeId),\n                    onChange: e => handleQuestionChange(e, type.quesionTypeId)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `question-${type.quesionTypeId}`,\n                    children: type.typeofQuestion\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 25\n                  }, this)]\n                }, type.quesionTypeId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Course Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"course_frominput_container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"courseStartDate\",\n                children: \"Course Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"courseStartDate\",\n                name: \"courseStartDate\",\n                value: startDate,\n                onChange: handleStartDateChange,\n                min: new Date().toISOString().split(\"T\")[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"course_frominput_container\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"courseEndDate\",\n                  children: \"Course End Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"courseEndDate\",\n                  name: \"courseEndDate\",\n                  value: endDate,\n                  onChange: handleEndDateChange,\n                  min: new Date().toISOString().split(\"T\")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Cost and Discounts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"course_frominput_container_parent\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"course_frominput_containe_discunt \",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cost\",\n                  children: \"Cost:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"cost\",\n                  name: \"cost\",\n                  value: formData.cost,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"course_frominput_containe_discunt\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"discount\",\n                  children: \"Discount (%):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"discount\",\n                  name: \"discount\",\n                  value: formData.discount,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"course_frominput_containe_discunt\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"discountAmount\",\n                  children: \"Discount Amount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"discountAmount\",\n                  name: \"discountAmount\",\n                  value: formData.discountAmount,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"course_frominput_containe_discunt\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"totalPrice\",\n                  children: \"Total Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"totalPrice\",\n                  name: \"totalPrice\",\n                  value: formData.totalPrice,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Add_Course_btn_container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: openForm,\n          children: \"Add course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course_exam_page\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Serial no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Course Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Type of Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \" Exam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Subjects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Type of Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Course Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Course End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Discount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Total Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: courseData.map((course, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.courseName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.typeOfTestName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.examName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(course.subjects) && course.subjects.length > 0 ? course.subjects.join(\", \") : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(course.typeofQuestion) && course.typeofQuestion.length > 0 ? course.typeofQuestion.join(\", \") : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(course.courseStartDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(course.courseEndDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.cost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.Discount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"courseupdate_btn_container\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/courseupdate/${course.courseCreationId}`,\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"courseupdate_btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa-solid fa-pencil\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"coursedelte_btn\",\n                  onClick: () => handleDelete(course.courseCreationId),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-regular fa-trash-can\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 17\n            }, this)]\n          }, course.courseCreationId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 5\n  }, this);\n};\n_s(Coursecreation, \"98cFl2fNjGAD4pSz8kE+150VZa0=\");\n_c = Coursecreation;\nexport default Coursecreation;\nvar _c;\n$RefreshReg$(_c, \"Coursecreation\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Coursecreation","_s","typeOfTest","setTypeOfTest","exams","setExams","selectedexams","setSelectedexams","selectedSubjects","setSelectedSubjects","typeofQuestion","setTypeofQuestion","selectedtypeofQuestion","setSelectedtypeofQuestion","startDate","setStartDate","endDate","setEndDate","subjectsData","setSubjectsData","isFormOpen","setIsFormOpen","courseData","setCourseData","resetFormFields","setFormData","courseName","examId","typeOfTestId","questiontypes","courseStartDate","courseEndDate","cost","discount","discountAmount","totalPrice","formData","fetchSelectedExam","response","fetch","ok","Error","status","data","json","error","console","fetchCourseData","result","coursesWithArrays","map","course","subjects","split","question_types","fetchTypeOfTest","then","catch","handleexams","event","selectedExamId","target","value","log","handleSubjectChange","subjectId","checked","subject","find","subj","prevSelectedSubjects","filter","id","handleQuestionChange","questionTypeId","prevSelectedQuestions","fetchTypeOfQuestion","handleStartDateChange","e","formattedDate","handleEndDateChange","handleChange","name","prevTypeOfTest","type","prevFormData","parseFloat","isNaN","selectedTypeOfTest","handleSubmit","preventDefault","requiredFields","isEmptyField","some","field","alert","window","location","reload","method","headers","body","JSON","stringify","courseCreationId","subjectsResponse","subjectIds","quesionTypeIds","subjectsResult","success","formatDate","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","handleDelete","confirmDelete","confirm","message","updatedCourseData","openForm","closeForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","htmlFor","onChange","typeOfTestName","examName","includes","subjectName","quesionTypeId","min","toISOString","readOnly","scope","index","Array","isArray","length","join","Discount","to","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/OTS/OTS-ADMIN/OTS-ADMIN/src/components/Coursecreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./admin.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Coursecreation = () => {\r\n  const [typeOfTest, setTypeOfTest] = useState([]);\r\n  const [exams, setExams] = useState([]);\r\n  const [selectedexams, setSelectedexams] = useState(\"\");\r\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\r\n  const [selectedtypeofQuestion, setSelectedtypeofQuestion] = useState([]);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [subjectsData, setSubjectsData] = useState([]);\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  // const [resetForm, setResetForm] = useState(false);\r\n\r\n  const resetFormFields = () => {\r\n    // Reset form fields\r\n    setFormData({\r\n      courseName: \"\",\r\n      examId: \"\",\r\n      typeOfTestId: \"\",\r\n      questiontypes: \"\",\r\n      courseStartDate: \"\",\r\n      courseEndDate: \"\",\r\n      cost: \"\",\r\n      discount: \"\",\r\n      discountAmount: \"\",\r\n      totalPrice: \"\",\r\n    });\r\n    // Reset selected subjects and question types\r\n    setSelectedSubjects([]);\r\n    setSelectedtypeofQuestion([]);\r\n\r\n    // Reset form visibility\r\n    setIsFormOpen(false);\r\n  };\r\n\r\n  // const toggleFormVisibility = () => {\r\n  //   setIsFormOpen((prevIsFormOpen) => !prevIsFormOpen);\r\n\r\n  //   // Reset the form when closing it\r\n  //   if (isFormOpen) {\r\n  //     resetFormFields();\r\n  //   }\r\n  // };\r\n\r\n  const [formData, setFormData] = useState({\r\n    courseName: \"\",\r\n    examId: \"\",\r\n    typeOfTestId: \"\",\r\n    questiontypes: \"\",\r\n    courseStartDate: \"\",\r\n    courseEndDate: \"\",\r\n    cost: \"\",\r\n    discount: \"\",\r\n    discountAmount: \"\",\r\n    totalPrice: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchSelectedExam = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3081/courese-exams/${selectedexams}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        // console.log(\"Fetched Selected Exam:\", data);\r\n        // Now 'data' contains the selected exam details, including examName\r\n      } catch (error) {\r\n        console.error(\"Error fetching selected exam:\", error);\r\n      }\r\n    };\r\n\r\n    // Call the function when selectedexams changes\r\n    fetchSelectedExam();\r\n  }, [selectedexams]);\r\n\r\n  useEffect(() => {\r\n    const fetchCourseData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:3081/course_creation_table\"\r\n        );\r\n        const result = await response.json();\r\n\r\n        // Ensure that subjects and typeofQuestion are arrays\r\n        const coursesWithArrays = result.map((course) => ({\r\n          ...course,\r\n          subjects: course.subjects ? course.subjects.split(\", \") : [],\r\n          typeofQuestion: course.question_types\r\n            ? course.question_types.split(\", \")\r\n            : [],\r\n        }));\r\n\r\n        // console.log(\"Fetched Course Data:\", coursesWithArrays);\r\n        setCourseData(coursesWithArrays);\r\n        // setCourseData(fetchedData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching course data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCourseData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchTypeOfTest = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3081/type_of_tests\");\r\n        const result = await response.json();\r\n        setTypeOfTest(result);\r\n      } catch (error) {\r\n        console.error(\"Error fetching Type of questions:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTypeOfTest();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3081/courese-exams\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setExams(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching exams:\", error));\r\n  }, []);\r\n\r\n  const handleexams = async (event) => {\r\n    const selectedExamId = event.target.value;\r\n    console.log(\"Selected Exam ID:\", selectedExamId);\r\n    setSelectedexams(selectedExamId);\r\n    console.log(\"Selected Exam ID (after setting):\", selectedexams);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`\r\n      );\r\n      const data = await response.json();\r\n      console.log(\"Subjects Data:\", data); // Log the fetched data\r\n      setSubjectsData(data); // Update subjectsData state\r\n      setSelectedSubjects([]); // Reset selected subjects\r\n    } catch (error) {\r\n      console.error(\"Error fetching subjects:\", error);\r\n    }\r\n\r\n    setSelectedexams(selectedExamId);\r\n  };\r\n\r\n  const handleSubjectChange = (event, subjectId) => {\r\n    const { checked } = event.target;\r\n    // Fetch the subject details from subjectsData using subjectId\r\n    const subject = subjectsData.find((subj) => subj.subjectId === subjectId);\r\n\r\n    if (subject) {\r\n      // If checked, add the subject to the selectedSubjects array\r\n      // If unchecked, remove the subject from the selectedSubjects array\r\n      setSelectedSubjects((prevSelectedSubjects) => {\r\n        if (checked) {\r\n          return [...prevSelectedSubjects, subjectId];\r\n        } else {\r\n          return prevSelectedSubjects.filter((id) => id !== subjectId);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleQuestionChange = (event, questionTypeId) => {\r\n    const { checked } = event.target;\r\n\r\n    setSelectedtypeofQuestion((prevSelectedQuestions) => {\r\n      if (checked) {\r\n        return [...prevSelectedQuestions, questionTypeId];\r\n      } else {\r\n        return prevSelectedQuestions.filter((id) => id !== questionTypeId);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTypeOfQuestion = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3081/type_of_questions\");\r\n        const result = await response.json();\r\n        // console.log(\"Type of Questions Data:\", result); // Add this line to log the data\r\n        setTypeofQuestion(result);\r\n      } catch (error) {\r\n        console.error(\"Error fetching Type of questions:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTypeOfQuestion();\r\n  }, []);\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setStartDate(formattedDate);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setEndDate(formattedDate);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, checked } = e.target;\r\n    // let selectedTypeOfTest;\r\n\r\n   if (name === \"typeOfTestId\") {\r\n    // If it's a checkbox, update the selected type of test\r\n    setTypeOfTest((prevTypeOfTest) =>\r\n      checked\r\n        ? [...prevTypeOfTest, value]\r\n        : prevTypeOfTest.filter((type) => type !== value)\r\n    );\r\n  } else {\r\n    // For other fields, update the form data\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  }\r\n    if (name === \"cost\" || name === \"discount\") {\r\n      const cost = name === \"cost\" ? parseFloat(value) : formData.cost;\r\n      const discount =\r\n        name === \"discount\" ? parseFloat(value) : formData.discount;\r\n      const discountAmount =\r\n        !isNaN(cost) && !isNaN(discount) ? (cost * discount) / 100 : \"\";\r\n      const totalPrice =\r\n        !isNaN(cost) && !isNaN(discountAmount) ? cost - discountAmount : \"\";\r\n      setFormData({\r\n        ...formData,\r\n        typeOfTest: selectedTypeOfTest || \"\",\r\n        examId: selectedexams,\r\n        subjects: selectedSubjects,\r\n        typeofQuestion: selectedtypeofQuestion,\r\n        courseStartDate: startDate,\r\n        courseEndDate: endDate,\r\n        cost: cost,\r\n        discount: discount,\r\n        discountAmount: discountAmount,\r\n        totalPrice: totalPrice,\r\n      });\r\n    } else if (name === \"courseStartDate\" || name === \"courseEndDate\") {\r\n      setFormData({ ...formData, [name]: value });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const requiredFields = [\r\n      \"courseName\",\r\n      \"typeOfTestId\",\r\n      \"examId\",\r\n      \"courseStartDate\",\r\n      \"courseEndDate\",\r\n      \"cost\",\r\n      \"discount\",\r\n      \"totalPrice\",\r\n    ];\r\n\r\n    const isEmptyField = requiredFields.some((field) => !formData[field]);\r\n\r\n    if (isEmptyField) {\r\n      alert(\"Please fill in all required fields.\");\r\n      return;\r\n    }\r\n    window.location.reload();\r\n    resetFormFields();\r\n    // Prepare the data for submission\r\n    const data = {\r\n      ...formData,\r\n      typeOfTest,\r\n      examId: selectedexams,\r\n      subjects: selectedSubjects,\r\n      typeofQuestion: selectedtypeofQuestion, // Assuming selectedtypeofQuestion is an array\r\n    };\r\n\r\n    // Submit the data to the server\r\n    try {\r\n      const response = await fetch(\"http://localhost:3081/course-creation\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      // Check if the result contains the expected structure\r\n      if (result && result.courseCreationId) {\r\n        const courseCreationId = result.courseCreationId;\r\n\r\n        // Use the courseCreationId in the second fetch to add subjects\r\n        const subjectsResponse = await fetch(\r\n          \"http://localhost:3081/course_type_of_question\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              courseCreationId,\r\n              subjectIds: selectedSubjects,\r\n              quesionTypeIds: selectedtypeofQuestion,\r\n            }),\r\n          }\r\n        );\r\n\r\n        const subjectsResult = await subjectsResponse.json();\r\n        console.log(\"Subjects Result:\", subjectsResult);\r\n        console.log(result);\r\n        if (result.success) {\r\n          console.log(\"Course created successfully\");\r\n        } else {\r\n          console.log(\"Failed to create course:\", result.error);\r\n        }\r\n      } else {\r\n        console.log(\"Failed to create course. Unexpected response:\", result);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting course data:\", error);\r\n      // Handle error or show an error message to the user\r\n    }\r\n  };\r\n\r\n  function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Month is 0-based\r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  const handleDelete = async (courseCreationId) => {\r\n    // Display a confirmation dialog before deleting\r\n    const confirmDelete = window.confirm(\r\n      \"Are you sure you want to delete this course?\"\r\n    );\r\n\r\n    if (confirmDelete) {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3081/course_creation_table_Delete/${courseCreationId}`,\r\n          {\r\n            method: \"DELETE\",\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n        console.log(result.message);\r\n        const updatedCourseData = courseData.filter(\r\n          (course) => course.courseCreationId !== courseCreationId\r\n        );\r\n        console.log(\"Before:\", courseData);\r\n        console.log(\"After:\", updatedCourseData);\r\n        setCourseData(updatedCourseData);\r\n      } catch (error) {\r\n        console.error(\"Error deleting course:\", error);\r\n      }\r\n    } else {\r\n      // The user canceled the deletion\r\n      console.log(\"Deletion canceled.\");\r\n    }\r\n  };\r\n\r\n  const openForm = () => {\r\n    setIsFormOpen(true);\r\n    if (isFormOpen) {\r\n      resetFormFields();\r\n    }\r\n  };\r\n\r\n  const closeForm = () => {\r\n    setIsFormOpen(false);\r\n    if (isFormOpen) {\r\n      resetFormFields();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"course_container\">\r\n      <div className=\"course_container_heder\">\r\n        <h2>courses</h2>\r\n\r\n        {isFormOpen ? (\r\n          <>\r\n            <form onSubmit={handleSubmit}>\r\n              <button id=\"courses_close_btn\" type=\"button\" onClick={closeForm}>\r\n                <i className=\"far fa-circle-xmark\"></i>\r\n              </button>\r\n              <div className=\"course_frominput_container\">\r\n                <div>\r\n                  <label htmlFor=\"courseName\">Course Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"courseName\"\r\n                    name=\"courseName\"\r\n                    value={formData.courseName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label>Type of Test:</label>\r\n                  <div>\r\n                    {typeOfTest.map((type) => (\r\n                      <div\r\n                        className=\"course_checkbox_continer course_frominput_container_media\"\r\n                        key={type.typeOfTestId}\r\n                      >\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={`typeOfTest-${type.typeOfTestId}`}\r\n                          name={`typeOfTest-${type.typeOfTestId}`}\r\n                          value={type.typeOfTestId}\r\n                          checked={formData.typeOfTestId === type.typeOfTestId}\r\n                          onChange={(e) => handleChange(e)}\r\n                        />\r\n                        <label htmlFor={`typeOfTest-${type.typeOfTestId}`}>\r\n                          {type.typeOfTestName}\r\n                        </label>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <fieldset>\r\n                <legend>Select Exam</legend>\r\n                <div className=\"course_frominput_container\">\r\n                  <div>\r\n                    <label htmlFor=\"exams\">Select Exam:</label>\r\n                    <select\r\n                      id=\"exams\"\r\n                      value={selectedexams}\r\n                      onChange={handleexams}\r\n                    >\r\n                      <option value=\"\">Select exams</option>\r\n                      {exams.map((exams) => (\r\n                        <option key={exams.examId} value={exams.examId}>\r\n                          {exams.examName}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"course_frominput_container\">\r\n                    <label>Select Subjects:</label>\r\n                    <div>\r\n                      {subjectsData.map((subject) => (\r\n                        <div\r\n                          className=\"course_frominput_container \"\r\n                          id=\"course_frominput_container_media\"\r\n                          key={subject.subjectId}\r\n                        >\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id={`subject-${subject.subjectId}`}\r\n                            name={`subject-${subject.subjectId}`}\r\n                            value={subject.subjectId}\r\n                            checked={selectedSubjects.includes(\r\n                              subject.subjectId\r\n                            )}\r\n                            onChange={(e) =>\r\n                              handleSubjectChange(e, subject.subjectId)\r\n                            }\r\n                          />\r\n                          <label htmlFor={`subject-${subject.subjectId}`}>\r\n                            {subject.subjectName}\r\n                          </label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <br />\r\n              <fieldset>\r\n                <div className=\"course_frominput_container\">\r\n                  <label>type of Questions:</label>\r\n                  <div className=\"course_checkbox_continer_content\">\r\n                    {typeofQuestion.map((type) => (\r\n                      <div\r\n                        className=\"course_checkbox_continer course_frominput_container_media\"\r\n                        key={type.quesionTypeId}\r\n                      >\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={`question-${type.quesionTypeId}`}\r\n                          name={`question-${type.quesionTypeId}`}\r\n                          value={type.quesionTypeId}\r\n                          checked={selectedtypeofQuestion.includes(\r\n                            type.quesionTypeId\r\n                          )}\r\n                          onChange={(e) =>\r\n                            handleQuestionChange(e, type.quesionTypeId)\r\n                          }\r\n                        />\r\n                        <label htmlFor={`question-${type.quesionTypeId}`}>\r\n                          {type.typeofQuestion}\r\n                        </label>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <br />\r\n              <fieldset>\r\n                <legend>Course Duration</legend>\r\n                <div className=\"course_frominput_container\">\r\n                  <label htmlFor=\"courseStartDate\">Course Start Date:</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"courseStartDate\"\r\n                    name=\"courseStartDate\"\r\n                    value={startDate}\r\n                    onChange={handleStartDateChange}\r\n                    min={new Date().toISOString().split(\"T\")[0]}\r\n                  />\r\n                  <div className=\"course_frominput_container\">\r\n                    <label htmlFor=\"courseEndDate\">Course End Date:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"courseEndDate\"\r\n                      name=\"courseEndDate\"\r\n                      value={endDate}\r\n                      onChange={handleEndDateChange}\r\n                      min={new Date().toISOString().split(\"T\")[0]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <br />\r\n              <fieldset>\r\n                <legend>Cost and Discounts</legend>\r\n\r\n                <div className=\"course_frominput_container_parent\">\r\n                  <div className=\"course_frominput_containe_discunt \">\r\n                    <label htmlFor=\"cost\">Cost:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"cost\"\r\n                      name=\"cost\"\r\n                      value={formData.cost}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"course_frominput_containe_discunt\">\r\n                    <label htmlFor=\"discount\">Discount (%):</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"discount\"\r\n                      name=\"discount\"\r\n                      value={formData.discount}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"course_frominput_containe_discunt\">\r\n                    <label htmlFor=\"discountAmount\">Discount Amount:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"discountAmount\"\r\n                      name=\"discountAmount\"\r\n                      value={formData.discountAmount}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                  <div className=\"course_frominput_containe_discunt\">\r\n                    <label htmlFor=\"totalPrice\">Total Price:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"totalPrice\"\r\n                      name=\"totalPrice\"\r\n                      value={formData.totalPrice}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <button type=\"submit\">Create Course</button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <div className=\"Add_Course_btn_container\">\r\n            <button type=\"button\" onClick={openForm}>\r\n              Add course\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"course_exam_page\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Serial no</th>\r\n              <th scope=\"col\">Course Name</th>\r\n              <th scope=\"col\">Type of Test</th>\r\n              <th scope=\"col\"> Exam</th>\r\n              <th scope=\"col\">Subjects</th>\r\n              <th scope=\"col\">Type of Questions</th>\r\n              <th scope=\"col\">Course Start Date</th>\r\n              <th scope=\"col\">Course End Date</th>\r\n              <th scope=\"col\">Cost</th>\r\n              <th scope=\"col\">Discount</th>\r\n              <th scope=\"col\">Total Price</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {courseData.map((course, index) => (\r\n              <tr key={course.courseCreationId}>\r\n                <td>{index + 1}</td>\r\n                <td>{course.courseName}</td>\r\n                <td>{course.typeOfTestName}</td>\r\n                <td>{course.examName}</td>\r\n                <td>\r\n                  {Array.isArray(course.subjects) && course.subjects.length > 0\r\n                    ? course.subjects.join(\", \")\r\n                    : \"N/A\"}\r\n                </td>\r\n                <td>\r\n                  {Array.isArray(course.typeofQuestion) &&\r\n                    course.typeofQuestion.length > 0\r\n                    ? course.typeofQuestion.join(\", \")\r\n                    : \"N/A\"}\r\n                </td>\r\n                <td>{formatDate(course.courseStartDate)}</td>\r\n                <td>{formatDate(course.courseEndDate)}</td>\r\n                <td>{course.cost}</td>\r\n                <td>{course.Discount}</td>\r\n                <td>{course.totalPrice}</td>\r\n                <td>\r\n\r\n                  <div className=\"courseupdate_btn_container\">\r\n                    <Link to={`/courseupdate/${course.courseCreationId}`}>\r\n                      {\" \"}\r\n                      <button className=\"courseupdate_btn\">\r\n                        <i className=\"fa-solid fa-pencil\"></i>\r\n                      </button>\r\n                    </Link>\r\n                    <button\r\n                      className=\"coursedelte_btn\"\r\n                      onClick={() => handleDelete(course.courseCreationId)}\r\n                    >\r\n                      <i className=\"fa-regular fa-trash-can\"></i>\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coursecreation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}